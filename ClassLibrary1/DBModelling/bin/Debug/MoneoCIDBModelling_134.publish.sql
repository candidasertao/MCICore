/*
Deployment script for moneosi

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "moneosi"
:setvar DefaultFilePrefix "moneosi"
:setvar DefaultDataPath "D:\RDSDBDATA\DATA\"
:setvar DefaultLogPath "D:\RDSDBDATA\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column CARTEIRAID on table [dbo].[CELULARES_INVALIDOS] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[CELULARES_INVALIDOS])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[CELULARES_INVALIDOS].[CELULARES_INVALIDOS_Includes]...';


GO
DROP INDEX [CELULARES_INVALIDOS_Includes]
    ON [dbo].[CELULARES_INVALIDOS];


GO
PRINT N'Altering [dbo].[CAMPANHAS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] DROP COLUMN [DDD];


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD [DDD] AS CAST ((SUBSTRING(CAST ([CELULAR] AS VARCHAR (11)), (0), (3))) AS TINYINT);


GO
PRINT N'Altering [dbo].[CELULARES_INVALIDOS]...';


GO
ALTER TABLE [dbo].[CELULARES_INVALIDOS] ALTER COLUMN [CARTEIRAID] INT NOT NULL;


GO
PRINT N'Creating [dbo].[CELULARES_INVALIDOS].[CELULARES_INVALIDOS_Includes]...';


GO
CREATE NONCLUSTERED INDEX [CELULARES_INVALIDOS_Includes]
    ON [dbo].[CELULARES_INVALIDOS]([CLIENTEID] ASC, [CARTEIRAID] ASC, [ARQUIVO] ASC, [DATAENVIAR] ASC, [TIPOINVALIDO] ASC)
    INCLUDE([CELULAR], [MENSAGEM], [IDCLIENTE]);


GO
PRINT N'Altering [dbo].[CONSOLIDADO_CAMPANHAS_AGENDADA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER PROC dbo.CONSOLIDADO_CAMPANHAS_AGENDADA --'2017-7-4','2017-7-4'
@DataInicial DATE,    
@DataFinal  DATE    
AS    

BEGIN  TRANSACTION
BEGIN TRY

CREATE TABLE #TMP(    
QUANTIDADE  INT,    
ARQUIVOID  INT,     
FORNECEDORID INT,    
CARTEIRAID  INT,     
DATAENVIAR  SMALLDATETIME,     
DATADIA   DATE,    
STATUSENVIO  TINYINT,    
STATUSREPORT TINYINT,    
CLIENTEID  INT,    
USUARIOID  INT,    
SPCAPITAL  INT,    
SPGRANDE  INT,    
DEMAISDDD  INT,
TIPOCAMPANHAID	INT
);    
		WITH ENVIADAS AS    
		(    
		 SELECT CAMPANHAID, ARQUIVOID, CARTEIRAID, STATUSREPORT, STATUSENVIO, FORNECEDORID, DATAENVIAR, DATADIA, CLIENTEID, USUARIOID,     
		 CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)=11 THEN 1 ELSE 0 END SPCAPITAL    
		 ,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>11 AND CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)<=19 THEN 1 ELSE 0 END SPGRANDE
		 ,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>19 THEN 1 ELSE 0 END DEMAISDDD, TIPOCAMPANHAID
		 FROM CAMPANHAS WHERE DATADIA BETWEEN @DataInicial AND @DataFinal    
		)    
		INSERT #TMP    
		SELECT COUNT(CAMPANHAID), ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA,     
		CASE WHEN STATUSENVIO=1 OR STATUSENVIO=0 THEN 3 ELSE STATUSENVIO END, STATUSREPORT, CLIENTEID, USUARIOID    
		,SUM(SPCAPITAL) SPCAPITAL, SUM(SPGRANDE) SPGRANDE, SUM(DEMAISDDD) DEMAISDDD, TIPOCAMPANHAID
		FROM ENVIADAS GROUP BY ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA, STATUSENVIO, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID, TIPOCAMPANHAID   
    
		DECLARE @TMP TABLE (    
		CODIGO   INT IDENTITY(1,1),    
		CARTEIRAID  INT,     
		ARQUIVOID  INT,     
		DATAENVIAR  SMALLDATETIME,     
		DATADIA   DATE,    
		FORNECEDORID INT,    
		STATUSREPORT TINYINT,    
		ERRO   INT,    
		SUSPENSA  INT,    
		CANCELADA  INT,    
		CLIENTEID  INT,    
		USUARIOID  INT,    
		ENVIADA   INT,    
		SPCAPITAL  INT,    
		SPGRANDE  INT,    
		DEMAISDDD  INT,
		TIPOCAMPANHAID INT
		);    
    
		INSERT @TMP    
		SELECT CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, ISNULL(STATUSREPORT, 99) STATUSREPORT,ISNULL([3],0) ERRO, ISNULL([4],0) SUSPENSA, ISNULL([5],0) CANCELADA, CLIENTEID, USUARIOID, ISNULL([2],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD, TIPOCAMPANHAID FROM   
  
		(SELECT QUANTIDADE, STATUSENVIO, CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID, SPCAPITAL, SPGRANDE, DEMAISDDD, TIPOCAMPANHAID FROM #TMP) AS PVT PIVOT(SUM(QUANTIDADE) FOR STATUSENVIO IN([2],[3],[4],[5])) AS P;    
    
		WITH CONSOLIDADA AS(    
		SELECT SUSPENSA, CANCELADA, ERRO, ARQUIVOID, CARTEIRAID, DATAENVIAR, FORNECEDORID, DATADIA, ISNULL([68],0) EXCLUIDA, ISNULL([0], 0) ENTREGUE, ISNULL([70],0) EXPIRADA, CLIENTEID, USUARIOID, ISNULL([99],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD, TIPOCAMPANHAID FROM     
		(SELECT SUSPENSA, ERRO, CANCELADA, ARQUIVOID, DATAENVIAR, FORNECEDORID, STATUSREPORT, CARTEIRAID, DATADIA, CLIENTEID, USUARIOID, ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD, TIPOCAMPANHAID FROM @TMP) AS PVT PIVOT (SUM(ENVIADA) FOR STATUSREPORT IN([68],[0],[70], [99])) AS P) 

		INSERT CAMPANHAS_CONSOLIDADO    
		SELECT CARTEIRAID, ARQUIVOID,  DATAENVIAR, USUARIOID, CLIENTEID,EXCLUIDA,ERRO,SUSPENSA,ENTREGUE,EXPIRADA, DATADIA, FORNECEDORID, CANCELADA,SPCAPITAL, SPGRANDE, DEMAISDDD, ENVIADA, TIPOCAMPANHAID FROM CONSOLIDADA C    
    
		DROP TABLE #TMP  
  
		INSERT INTO CELULARES_INVALIDOS_CONSOLIDADO  
		SELECT TIPOINVALIDO, CLIENTEID, USUARIOID, COUNT(CODIGO), CARTEIRAID, ARQUIVO, CAST(DATAENVIAR AS DATE) FROM  [dbo].[CELULARES_INVALIDOS] WHERE DATAENVIAR BETWEEN @DataInicial AND @DataFinal GROUP BY CLIENTEID, USUARIOID, CARTEIRAID, ARQUIVO, CAST(DATAENVIAR AS DATE), TIPOINVALIDO  

		INSERT INTO RETORNO_CONSOLIDADO
		SELECT FORNECEDORID, [0] POSITIVO ,[1] NEGATIVO, [2] NEUTRO, CLIENTEID, DATADIA, CARTEIRAID, ARQUIVOID, USUARIOID, DATARETORNO FROM
				(SELECT CE.FORNECEDORID, [CLASSIFICACAO],CODIGO, DATEPART(hh, DATARETORNO) DATARETORNO, C.CLIENTEID, C.USUARIOID, CAST(DATARETORNO AS DATE) DATADIA, C.CARTEIRAID, C.ARQUIVOID FROM CAMPANHA_RETORNO CE JOIN CAMPANHAS C ON CE.CAMPANHAID=C.CAMPANHAID WHERE C.DATADIA=@DataInicial) 
				AS PVT PIVOT (COUNT(CODIGO) FOR [CLASSIFICACAO] IN([0],[1],[2])) AS P

				COMMIT TRANSACTION
				END TRY
				BEGIN CATCH
				ROLLBACK TRANSACTION
				END CATCH
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[HIGIENIZA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[HIGIENIZA]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[CAMPANHA_RETORNO_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CAMPANHA_RETORNO_PAGINACAO]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[CONSOLIDADO_STATUS_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CONSOLIDADO_STATUS_PAGINACAO]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Update complete.';


GO
