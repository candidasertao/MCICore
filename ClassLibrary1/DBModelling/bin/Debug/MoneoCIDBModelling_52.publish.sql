/*
Deployment script for moneosi

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "moneosi"
:setvar DefaultFilePrefix "moneosi"
:setvar DefaultDataPath "D:\RDSDBDATA\DATA\"
:setvar DefaultLogPath "D:\RDSDBDATA\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                ENABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [moneoci]...';


GO
CREATE LOGIN [moneoci]
    WITH PASSWORD = N'rduuiFxmtzv||sqL dpmcc6cmsFT7_&#$!~<getz?tLm@kfy', SID = 0xC47744D8714DBE43BE0D5A3AE4BA1306, DEFAULT_DATABASE = [MONEO_CI], DEFAULT_LANGUAGE = [us_english], CHECK_EXPIRATION = ON;


GO
PRINT N'Creating [moneoci]...';


GO
CREATE USER [moneoci] FOR LOGIN [moneoci];


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_owner', @membername = N'moneoci';


GO
PRINT N'Creating [dbo].[BOLETOLANDING]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[BOLETOLANDING] (
    [CODIGO]               INT                 IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]              VARCHAR (250)       NOT NULL,
    [CARTEIRAID]           INT                 NOT NULL,
    [CLIENTEID]            INT                 NOT NULL,
    [ACEITE]               CHAR (1)            NOT NULL,
    [AGENCIACONTA]         VARCHAR (50)        NOT NULL,
    [BENEFICIARIO]         VARCHAR (150)       NOT NULL,
    [ENDERECO]             VARCHAR (150)       NOT NULL,
    [CIDADE]               VARCHAR (100)       NOT NULL,
    [UF]                   CHAR (2)            NOT NULL,
    [CEP]                  INT                 NOT NULL,
    [PAGADOR]              VARCHAR (150)       NOT NULL,
    [VENCIMENTO]           DATE                NULL,
    [CPFCNPJ]              NUMERIC (14)        NOT NULL,
    [CARTEIRA]             VARCHAR (25)        NULL,
    [CONTRATO]             VARCHAR (300)       NOT NULL,
    [DATADOCUMENTO]        DATE                NOT NULL,
    [DATAPROCESSAMENTO]    DATE                NOT NULL,
    [NUMERODOCUMENTO]      VARCHAR (26)        NOT NULL,
    [INSTRUCOES]           VARCHAR (500)       NOT NULL,
    [NOSSONUMERO]          VARCHAR (26)        NOT NULL,
    [VALORCOBRADO]         MONEY               NULL,
    [VALORDOCUMENTO]       MONEY               NULL,
    [DESCONTO]             MONEY               NULL,
    [MORAMULTA]            MONEY               NULL,
    [ESPECIEDOCUMENTO]     CHAR (2)            NOT NULL,
    [OUTROSACRESCIMOS]     MONEY               NULL,
    [PARCELAS]             INT                 NULL,
    [VALORTOTAL]           MONEY               NULL,
    [QUANTIDADE]           INT                 NULL,
    [VALORMOEDA]           VARCHAR (20)        NULL,
    [PLANOS]               VARCHAR (20)        NULL,
    [VALORDOCUMENTOBOLETO] MONEY               NULL,
    [LINHADIGITAVEL]       CHAR (54)           NOT NULL,
    [LOCALPAGAMENTO]       VARCHAR (300)       NOT NULL,
    [IDBOLETO]             VARCHAR (50) SPARSE NULL
) ON [PRIMARY];


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHA_RETORNO]...';


GO
CREATE TABLE [dbo].[CAMPANHA_RETORNO] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID]  INT           NOT NULL,
    [RETORNO]       VARCHAR (450) NOT NULL,
    [DATARETORNO]   DATETIME      NOT NULL,
    [DATA]          DATETIME      NOT NULL,
    [CAMPANHAID]    BIGINT        NOT NULL,
    [CLASSIFICACAO] TINYINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[CAMPANHAS]...';


GO
CREATE TABLE [dbo].[CAMPANHAS] (
    [CAMPANHAID]          BIGINT               IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID]          INT                  NULL,
    [DATAENVIAR]          SMALLDATETIME        NOT NULL,
    [DATA]                DATETIME             NOT NULL,
    [OPERADORAID]         TINYINT              NOT NULL,
    [CLIENTEID]           INT                  NOT NULL,
    [USUARIOID]           INT                  NULL,
    [FORNECEDORID]        INT                  NOT NULL,
    [IDCLIENTE]           VARCHAR (100) SPARSE NULL,
    [STATUSENVIO]         TINYINT              NOT NULL,
    [TIPOCAMPANHAID]      INT                  NULL,
    [TIPOSMS]             TINYINT              NOT NULL,
    [CELULAR]             NUMERIC (12)         NOT NULL,
    [STATUSREPORT]        TINYINT              NULL,
    [DATAREPORT]          DATETIME             NULL,
    [TEXTO]               VARCHAR (320)        NOT NULL,
    [MESSAGEID]           VARCHAR (20) SPARSE  NULL,
    [ARQUIVOID]           INT                  NULL,
    [DATADIA]             DATE                 NOT NULL,
    [DATAENVIOFORNECEDOR] DATETIME             NULL,
    [DDD]                 AS                   CAST ((SUBSTRING(CAST ([CELULAR] AS VARCHAR (11)), (0), (3))) AS TINYINT),
    CONSTRAINT [PK__CAMPANHA__593453D3C31FB19A] PRIMARY KEY CLUSTERED ([CAMPANHAID] ASC, [DATAENVIAR] ASC)
);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[ix_CAMPANHAS_CELULAR_includes]...';


GO
CREATE NONCLUSTERED INDEX [ix_CAMPANHAS_CELULAR_includes]
    ON [dbo].[CAMPANHAS]([CELULAR] ASC)
    INCLUDE([CLIENTEID], [IDCLIENTE]) WITH (FILLFACTOR = 90);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_MONITORIA_filtered]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_MONITORIA_filtered]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [DATADIA] ASC)
    INCLUDE([CARTEIRAID], [DATAENVIAR], [USUARIOID], [FORNECEDORID], [STATUSENVIO], [ARQUIVOID], [DATAENVIOFORNECEDOR]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_UPDATES]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_UPDATES]
    ON [dbo].[CAMPANHAS]([CARTEIRAID] ASC, [DATAENVIAR] ASC, [CLIENTEID] ASC, [ARQUIVOID] ASC)
    INCLUDE([CAMPANHAID], [STATUSENVIO]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_STATUSCAMPANHAS]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_STATUSCAMPANHAS]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [STATUSENVIO] ASC, [DATADIA] ASC)
    INCLUDE([CARTEIRAID], [DATAENVIAR], [OPERADORAID], [FORNECEDORID], [IDCLIENTE], [CELULAR], [TEXTO], [ARQUIVOID]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_RELATORIO_DETALHADO]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_RELATORIO_DETALHADO]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [DATADIA] ASC)
    INCLUDE([DATAENVIAR], [OPERADORAID], [IDCLIENTE], [CELULAR], [STATUSREPORT], [DATAREPORT], [TEXTO], [STATUSENVIO], [CARTEIRAID], [ARQUIVOID], [TIPOCAMPANHAID]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHA_PENDENTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHA_PENDENTE]
    ON [dbo].[CAMPANHAS]([STATUSENVIO] ASC, [DATADIA] ASC)
    INCLUDE([CAMPANHAID], [OPERADORAID], [CLIENTEID], [FORNECEDORID], [CELULAR], [TEXTO]) WHERE ([STATUSENVIO]=1);


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CAMPANHAS_ARQUIVOS] (
    [ARQUIVOID] INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]   VARCHAR (255) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [USUARIOID] INT           NULL,
    [DATA]      DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([ARQUIVOID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS].[IX_CAMPANHAS_ARQUIVOS_ARQUIVO_CLIENTEID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CAMPANHAS_ARQUIVOS_ARQUIVO_CLIENTEID]
    ON [dbo].[CAMPANHAS_ARQUIVOS]([ARQUIVO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]   VARCHAR (250) NOT NULL,
    [ARQUIVOID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP].[IX_CAMPANHAS_ARQUIVOS_FILESZIP_ARQUIVO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CAMPANHAS_ARQUIVOS_FILESZIP_ARQUIVO]
    ON [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]([ARQUIVO] ASC);


GO
PRINT N'Creating [dbo].[CAMPANHAS_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CAMPANHAS_CONSOLIDADO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID]   INT           NOT NULL,
    [ARQUIVOID]    INT           NULL,
    [DATAENVIAR]   SMALLDATETIME NOT NULL,
    [USUARIOID]    INT           NULL,
    [CLIENTEID]    INT           NOT NULL,
    [EXCLUIDA]     INT           NOT NULL,
    [ERRO]         INT           NOT NULL,
    [SUSPENSA]     INT           NOT NULL,
    [ENTREGUE]     INT           NOT NULL,
    [EXPIRADA]     INT           NOT NULL,
    [DATADIA]      DATE          NOT NULL,
    [FORNECEDORID] INT           NOT NULL,
    [CANCELADA]    INT           NOT NULL,
    [SPCAPITAL]    INT           NOT NULL,
    [SPGRANDE]     INT           NOT NULL,
    [DEMAISDDD]    INT           NOT NULL,
    [ENVIADA]      INT           NOT NULL,
    [ENVIADAS]     AS            ENTREGUE + EXPIRADA + EXCLUIDA + ENVIADA,
    [NAOENVIADAS]  AS            ERRO + CANCELADA + SUSPENSA,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CARTEIRA_TELEFONES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CARTEIRA_TELEFONES] (
    [CODIGO]     INT          IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID] INT          NOT NULL,
    [NUMERO]     NUMERIC (11) NOT NULL,
    [DESCRICAO]  VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CARTEIRA_TELEFONES].[IX_CARTEIRA_TELEFONE]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CARTEIRA_TELEFONE]
    ON [dbo].[CARTEIRA_TELEFONES]([CARTEIRAID] ASC, [NUMERO] ASC);


GO
PRINT N'Creating [dbo].[CARTEIRAS]...';


GO
CREATE TABLE [dbo].[CARTEIRAS] (
    [CARTEIRAID]       INT           IDENTITY (1, 1) NOT NULL,
    [CARTEIRA]         VARCHAR (150) NOT NULL,
    [IDCARTEIRA]       VARCHAR (50)  NULL,
    [USUARIOID]        INT           NULL,
    [CLIENTEID]        INT           NOT NULL,
    [DATA]             DATETIME      NOT NULL,
    [LIMITE]           INT           NULL,
    [PERIODICIDADE]    SMALLINT      NULL,
    [DIAINICIO]        INT           NULL,
    [PORCENTAGEMAVISO] INT           NULL,
    [VISIVEL]          BIT           NOT NULL,
    [HIGIENIZA]        BIT           NOT NULL,
    [DIASHIGIENIZACAO] INT           NULL,
    [SEGMENTACAOID]    INT           NULL,
    [HORALIMITE]       TIME (7)      NULL,
    [BLOQUEIOENVIO]    BIT           NULL,
    [ISEXCLUDED]       BIT           NOT NULL,
    CONSTRAINT [PK__CARTEIRA__1ACAB244DB6FFCF3] PRIMARY KEY CLUSTERED ([CARTEIRAID] ASC)
);


GO
PRINT N'Creating [dbo].[CARTEIRAS].[IX_GESTOR_CARTEIRA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_CARTEIRA]
    ON [dbo].[CARTEIRAS]([CARTEIRA] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[CELULAR_BLACKLIST]...';


GO
CREATE TABLE [dbo].[CELULAR_BLACKLIST] (
    [BLACKLISTID] INT          IDENTITY (1, 1) NOT NULL,
    [CELULAR]     NUMERIC (11) NOT NULL,
    [DATA]        DATETIME     NOT NULL,
    [CLIENTEID]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([BLACKLISTID] ASC)
);


GO
PRINT N'Creating [dbo].[CELULAR_BLACKLIST].[IX_CELULAR_BLACKLIST]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CELULAR_BLACKLIST]
    ON [dbo].[CELULAR_BLACKLIST]([CELULAR] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[CELULARES_INVALIDOS]...';


GO
CREATE TABLE [dbo].[CELULARES_INVALIDOS] (
    [CODIGO]       INT                  IDENTITY (1, 1) NOT NULL,
    [CELULAR]      NUMERIC (15)         NOT NULL,
    [CLIENTEID]    INT                  NOT NULL,
    [USUARIOID]    INT                  NULL,
    [CARTEIRAID]   INT                  NULL,
    [ARQUIVO]      VARCHAR (250) SPARSE NULL,
    [DATAENVIAR]   DATETIME             NOT NULL,
    [TIPOINVALIDO] TINYINT              NOT NULL,
    [MENSAGEM]     VARCHAR (300)        NOT NULL,
    [IDCLIENTE]    VARCHAR (100)        NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[CELULARES_INVALIDOS].[CELULARES_INVALIDOS_Includes]...';


GO
CREATE NONCLUSTERED INDEX [CELULARES_INVALIDOS_Includes]
    ON [dbo].[CELULARES_INVALIDOS]([CLIENTEID] ASC, [CARTEIRAID] ASC, [ARQUIVO] ASC, [DATAENVIAR] ASC, [TIPOINVALIDO] ASC)
    INCLUDE([CELULAR], [MENSAGEM], [IDCLIENTE]);


GO
PRINT N'Creating [dbo].[CELULARES_INVALIDOS_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CELULARES_INVALIDOS_CONSOLIDADO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [TIPOINVALIDO] TINYINT       NOT NULL,
    [CLIENTEID]    INT           NOT NULL,
    [USUARIOID]    INT           NULL,
    [QUANTIDADE]   INT           NOT NULL,
    [CARTEIRAID]   INT           NOT NULL,
    [ARQUIVO]      VARCHAR (255) NULL,
    [DATADIA]      DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CLIENTES]...';


GO
CREATE TABLE [dbo].[CLIENTES] (
    [CLIENTEID]   INT           IDENTITY (1, 1) NOT NULL,
    [NOME]        VARCHAR (150) NOT NULL,
    [CNPJ]        VARCHAR (14)  NOT NULL,
    [ENDERECO]    VARCHAR (150) NULL,
    [NUMERO]      VARCHAR (10)  NULL,
    [COMPLEMENTO] VARCHAR (100) NULL,
    [BAIRRO]      VARCHAR (100) NULL,
    [CEP]         VARCHAR (8)   NULL,
    [CIDADE]      VARCHAR (150) NULL,
    [UF]          CHAR (2)      NULL,
    [DATA]        DATETIME      NOT NULL,
    [POSPAGO]     BIT           NOT NULL,
    [SALDO]       INT           NOT NULL,
    CONSTRAINT [PK__CLIENTES__566BBD8BD2FD1348] PRIMARY KEY CLUSTERED ([CLIENTEID] ASC)
);


GO
PRINT N'Creating [dbo].[CLIENTES].[IX_CLIENTES]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CLIENTES]
    ON [dbo].[CLIENTES]([CNPJ] ASC);


GO
PRINT N'Creating [dbo].[CLIENTES_CONFIGURACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[CLIENTES_CONFIGURACAO] (
    [CODIGO]                 INT IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]              INT NOT NULL,
    [DISTRIBUICAOAUTOMATICA] BIT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CLIENTES_CONTATO]...';


GO
CREATE TABLE [dbo].[CLIENTES_CONTATO] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [TELEFONE]  NUMERIC (14)  NULL,
    [EMAIL]     VARCHAR (255) NULL,
    [DESCRICAO] VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[FILECARDS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[FILECARDS] (
    [CODIGO]  INT           IDENTITY (1, 1) NOT NULL,
    [GUID]    VARCHAR (40)  NOT NULL,
    [DATA]    DATETIME      NOT NULL,
    [ARQUIVO] VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[FORNECEDOR]...';


GO
CREATE TABLE [dbo].[FORNECEDOR] (
    [FORNECEDORID] INT           IDENTITY (1, 1) NOT NULL,
    [NOME]         VARCHAR (150) NULL,
    [CPFCNPJ]      VARCHAR (15)  NOT NULL,
    [ENDERECO]     VARCHAR (150) NOT NULL,
    [NUMERO]       VARCHAR (10)  NOT NULL,
    [COMPLEMENTO]  VARCHAR (100) NULL,
    [BAIRRO]       VARCHAR (100) NOT NULL,
    [CIDADE]       VARCHAR (150) NOT NULL,
    [UF]           CHAR (2)      NOT NULL,
    [DATA]         DATETIME      NOT NULL,
    CONSTRAINT [PK_FORNECEDOR] PRIMARY KEY CLUSTERED ([FORNECEDORID] ASC)
);


GO
PRINT N'Creating [dbo].[FORNECEDOR].[IX_FORNECEDOR_CPFCNPJ]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_FORNECEDOR_CPFCNPJ]
    ON [dbo].[FORNECEDOR]([CPFCNPJ] ASC);


GO
PRINT N'Creating [dbo].[FORNECEDOR_CAPACIDADE]...';


GO
CREATE TABLE [dbo].[FORNECEDOR_CAPACIDADE] (
    [CODIGO]       INT IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT NOT NULL,
    [OPERADORAID]  INT NOT NULL,
    [CAPACIDADE]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[FORNECEDOR_CLIENTE]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[FORNECEDOR_CLIENTE] (
    [CODIGO]       INT             IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT             NOT NULL,
    [CLIENTEID]    INT             NOT NULL,
    [ATIVO]        BIT             NOT NULL,
    [VISIVEL]      BIT             NOT NULL,
    [DATAVINCULO]  DATETIME        NOT NULL,
    [DISTRIBUICAO] DECIMAL (18, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[FORNECEDOR_CLIENTE].[IX_CLIENTES_FORNECEDOR]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CLIENTES_FORNECEDOR]
    ON [dbo].[FORNECEDOR_CLIENTE]([FORNECEDORID] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[FORNECEDOR_CONTATO]...';


GO
CREATE TABLE [dbo].[FORNECEDOR_CONTATO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT           NOT NULL,
    [TELEFONE]     NUMERIC (14)  NULL,
    [EMAIL]        VARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[FORNECEDOR_FAIXAS]...';


GO
CREATE TABLE [dbo].[FORNECEDOR_FAIXAS] (
    [CODIGO]       INT            IDENTITY (1, 1) NOT NULL,
    [VALOR]        DECIMAL (5, 5) NOT NULL,
    [FAIXAIN]      INT            NOT NULL,
    [FAIXAOUT]     INT            NOT NULL,
    [FORNECEDORID] INT            NOT NULL,
    [TIPOSMS]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[GESTOR]...';


GO
CREATE TABLE [dbo].[GESTOR] (
    [GESTORID]  INT           IDENTITY (1, 1) NOT NULL,
    [NOME]      VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [DATA]      DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([GESTORID] ASC)
);


GO
PRINT N'Creating [dbo].[GESTOR].[IX_GESTOR_NOME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_NOME]
    ON [dbo].[GESTOR]([NOME] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[GESTOR_CARTEIRAS]...';


GO
CREATE TABLE [dbo].[GESTOR_CARTEIRAS] (
    [CODIGO]     INT IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID] INT NOT NULL,
    [GESTORID]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[GESTOR_CARTEIRAS].[IX_GESTOR_CARTEIRAS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_CARTEIRAS]
    ON [dbo].[GESTOR_CARTEIRAS]([CARTEIRAID] ASC, [GESTORID] ASC);


GO
PRINT N'Creating [dbo].[GESTOR_EMAIL]...';


GO
CREATE TABLE [dbo].[GESTOR_EMAIL] (
    [CODIGO]   INT           IDENTITY (1, 1) NOT NULL,
    [GESTORID] INT           NOT NULL,
    [EMAIL]    VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[GESTOR_EMAIL].[IX_GESTOR_EMAIL]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_EMAIL]
    ON [dbo].[GESTOR_EMAIL]([EMAIL] ASC, [GESTORID] ASC);


GO
PRINT N'Creating [dbo].[GESTOR_TELEFONES]...';


GO
CREATE TABLE [dbo].[GESTOR_TELEFONES] (
    [CODIGO]   INT          IDENTITY (1, 1) NOT NULL,
    [GESTORID] INT          NOT NULL,
    [TELEFONE] NUMERIC (12) NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[GESTOR_TELEFONES].[IX_GESTOR_TELEFONES]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_TELEFONES]
    ON [dbo].[GESTOR_TELEFONES]([TELEFONE] ASC, [GESTORID] ASC);


GO
PRINT N'Creating [dbo].[GRUPOPAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[GRUPOPAGINAS] (
    [GRUPOID] INT           IDENTITY (1, 1) NOT NULL,
    [GRUPO]   VARCHAR (150) NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GRUPOUSUARIO_PAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[GRUPOUSUARIO_PAGINAS] (
    [GRUPOUSUARIOPAGINAID] INT     IDENTITY (1, 1) NOT NULL,
    [PAGINAID]             INT     NOT NULL,
    [GRUPOUSUARIOID]       INT     NOT NULL,
    [PERMISSAO]            TINYINT NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOUSUARIOPAGINAID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GRUPOUSUARIOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[GRUPOUSUARIOS] (
    [GRUPOUSUARIOID]     INT           IDENTITY (1, 1) NOT NULL,
    [COTA]               INT           NOT NULL,
    [SALDO]              INT           NOT NULL,
    [CLIENTEID]          INT           NOT NULL,
    [SALDOCOMPARTILHADO] BIT           NOT NULL,
    [NOME]               VARCHAR (150) NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOUSUARIOID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GRUPOUSUARIOS].[IX_GRUPOUSUARIOS_NOME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GRUPOUSUARIOS_NOME]
    ON [dbo].[GRUPOUSUARIOS]([NOME] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[HIGIENIZACAO_CELL]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[HIGIENIZACAO_CELL] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[IDENTITYSERVER_CLIENTS] (
    [CODIGO]    INT          IDENTITY (1, 1) NOT NULL,
    [SECRET]    VARCHAR (50) NOT NULL,
    [CLIENTEID] VARCHAR (50) NOT NULL,
    [TOKENTYPE] TINYINT      NOT NULL,
    [GRANTYPES] VARCHAR (50) NOT NULL,
    [TOKENLIFE] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS].[IX_IDENTITYSERVER_CLIENTS_CLIENTEID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_CLIENTEID]
    ON [dbo].[IDENTITYSERVER_CLIENTS]([CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_CLAIM]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[IDENTITYSERVER_CLIENTS_CLAIM] (
    [ID]     INT           IDENTITY (1, 1) NOT NULL,
    [CODIGO] INT           NOT NULL,
    [VALUE]  VARCHAR (50)  NOT NULL,
    [TYPE]   VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES] (
    [ID]          INT                 IDENTITY (1, 1) NOT NULL,
    [APISECRET]   VARCHAR (50) SPARSE NULL,
    [USERCLAIMS]  VARCHAR (1000)      NULL,
    [API]         VARCHAR (50)        NOT NULL,
    [DISPLAYNAME] VARCHAR (150)       NOT NULL,
    [CODIGO]      INT                 NOT NULL,
    [TOKEN]       VARCHAR (70)        NULL,
    [DATA]        DATETIME            NOT NULL,
    [ISRESETED]   BIT                 NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_SCOPES].[IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN]
    ON [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]([TOKEN] ASC);


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_SCOPES].[IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN_Includes]...';


GO
CREATE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN_Includes]
    ON [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]([TOKEN] ASC)
    INCLUDE([APISECRET], [API]);


GO
PRINT N'Creating [dbo].[LOG_ATIVIDADE]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[LOG_ATIVIDADE] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]     INT           NOT NULL,
    [USUARIOID]     INT           NULL,
    [DATA]          DATETIME      NOT NULL,
    [DESCRICAO]     VARCHAR (250) NOT NULL,
    [TIPOATIVIDADE] TINYINT       NOT NULL,
    [DATADIA]       DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[MOTIVO_BLACKLIST]...';


GO
CREATE TABLE [dbo].[MOTIVO_BLACKLIST] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [MOTIVO]    VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[MOTIVO_BLACKLIST].[IX_MOTIVO_BLACKLIST]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_MOTIVO_BLACKLIST]
    ON [dbo].[MOTIVO_BLACKLIST]([CLIENTEID] ASC, [MOTIVO] ASC);


GO
PRINT N'Creating [dbo].[OPERADORA]...';


GO
CREATE TABLE [dbo].[OPERADORA] (
    [OPERADORAID] INT          IDENTITY (1, 1) NOT NULL,
    [OPERADORA]   VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_OPERADORA] PRIMARY KEY CLUSTERED ([OPERADORAID] ASC)
);


GO
PRINT N'Creating [dbo].[PADRAO_POSTAGENS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[PADRAO_POSTAGENS] (
    [CODIGO]     INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]    VARCHAR (255) NOT NULL,
    [CARTEIRAID] INT           NOT NULL,
    [CLIENTEID]  INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[PADRAO_POSTAGENS].[IX_PADRAO_POSTAGENS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_PADRAO_POSTAGENS]
    ON [dbo].[PADRAO_POSTAGENS]([ARQUIVO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[PAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[PAGINAS] (
    [PAGINAID] INT           IDENTITY (1, 1) NOT NULL,
    [PAGINA]   VARCHAR (150) NOT NULL,
    [GRUPOID]  INT           NOT NULL,
    [URL]      VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([PAGINAID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[PORTABILIDADE]...';


GO
CREATE TABLE [dbo].[PORTABILIDADE] (
    [CODIGO]      INT          IDENTITY (1, 1) NOT NULL,
    [NUMERO]      NUMERIC (11) NOT NULL,
    [OPERADORAID] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[PORTABILIDADE].[IX_PORTABILIDADE_NUMERO]...';


GO
CREATE NONCLUSTERED INDEX [IX_PORTABILIDADE_NUMERO]
    ON [dbo].[PORTABILIDADE]([NUMERO] ASC);


GO
PRINT N'Creating [dbo].[PREFIXOS]...';


GO
CREATE TABLE [dbo].[PREFIXOS] (
    [CODIGO]      INT IDENTITY (1, 1) NOT NULL,
    [PREFIXO]     INT NOT NULL,
    [OPERADORAID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[PREFIXOS].[IX_PREFIXOS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_PREFIXOS]
    ON [dbo].[PREFIXOS]([PREFIXO] ASC);


GO
PRINT N'Creating [dbo].[RATINHOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[RATINHOS] (
    [CODIGO] INT          IDENTITY (1, 1) NOT NULL,
    [NUMERO] NUMERIC (11) NULL,
    [DATA]   DATETIME     NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[REJEITADAS_ANTERIORES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[REJEITADAS_ANTERIORES] (
    [CODIGO]  INT          IDENTITY (1, 1) NOT NULL,
    [CELULAR] DECIMAL (12) NOT NULL,
    [DATA]    DATE         NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[REJEITADAS_ANTERIORES].[IX_REJEITADAS_ANTERIORES_CELULAR_Includes]...';


GO
CREATE NONCLUSTERED INDEX [IX_REJEITADAS_ANTERIORES_CELULAR_Includes]
    ON [dbo].[REJEITADAS_ANTERIORES]([CELULAR] ASC, [DATA] ASC);


GO
PRINT N'Creating [dbo].[REQUISICAO_RELATORIO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[REQUISICAO_RELATORIO] (
    [REQUISICAOID]    INT            IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]       INT            NOT NULL,
    [USUARIOID]       INT            NULL,
    [DATA]            DATETIME       NOT NULL,
    [DATAINICIAL]     DATE           NOT NULL,
    [DATAFINAL]       DATE           NOT NULL,
    [TIPORELATORIO]   TINYINT        NOT NULL,
    [ARQUIVO]         VARCHAR (250)  NOT NULL,
    [STATUSRELATORIO] TINYINT        NOT NULL,
    [TAMANHO]         DECIMAL (8, 2) NULL,
    PRIMARY KEY CLUSTERED ([REQUISICAOID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[REQUISICAO_RELATORIO_CARTEIRAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS] (
    [CODIGO]       INT IDENTITY (1, 1) NOT NULL,
    [REQUISICAOID] INT NOT NULL,
    [CARTEIRAID]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[REQUISICAO_RELATORIO_EMAILS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[REQUISICAO_RELATORIO_EMAILS] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [EMAIL]        VARCHAR (250) NOT NULL,
    [REQUISICAOID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[RETORNO_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[RETORNO_CONSOLIDADO] (
    [CODIGO]       INT  IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT  NOT NULL,
    [POSITIVO]     INT  NOT NULL,
    [NEGATIVO]     INT  NOT NULL,
    [NEUTRO]       INT  NOT NULL,
    [CLIENTEID]    INT  NOT NULL,
    [DATADIA]      DATE NOT NULL,
    [CARTEIRAID]   INT  NOT NULL,
    [ARQUIVOID]    INT  NULL,
    [USUARIOID]    INT  NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[RETORNO_INTERJEICAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[RETORNO_INTERJEICAO] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [INTERJEICAO]   VARCHAR (150) NOT NULL,
    [CLIENTEID]     INT           NOT NULL,
    [CLASSIFICACAO] TINYINT       NOT NULL,
    [USUARIOID]     INT           NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[RETORNO_INTERJEICAO].[IX_RETORNO_INTERJEICAO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_RETORNO_INTERJEICAO]
    ON [dbo].[RETORNO_INTERJEICAO]([INTERJEICAO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[SEGMENTACAO]...';


GO
CREATE TABLE [dbo].[SEGMENTACAO] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [NOME]      VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[SEGMENTACAO].[IX_SEGMENTACAO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_SEGMENTACAO]
    ON [dbo].[SEGMENTACAO]([NOME] ASC, [CLIENTEID] ASC);


GO
PRINT N'Creating [dbo].[SESSION_ITENS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[SESSION_ITENS] (
    [CODIGO] INT             IDENTITY (1, 1) NOT NULL,
    [GUID]   VARCHAR (60)    NOT NULL,
    [KEY]    VARCHAR (150)   NOT NULL,
    [VALUE]  VARBINARY (MAX) NOT NULL,
    [DATA]   DATETIME        NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SESSION_ITENS].[IX_SESSION_ITENS_KEY_GUID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_SESSION_ITENS_KEY_GUID]
    ON [dbo].[SESSION_ITENS]([KEY] ASC, [GUID] ASC);


GO
PRINT N'Creating [dbo].[TIPOCAMPANHA]...';


GO
CREATE TABLE [dbo].[TIPOCAMPANHA] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [TIPOCAMPANHA] VARCHAR (150) NOT NULL,
    [CLIENTEID]    INT           NOT NULL,
    [VISIVEL]      BIT           NULL,
    [ISEXCLUDED]   BIT           NOT NULL,
    CONSTRAINT [PK__TIPOCAMP__CC87E1272DC8280D] PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[TIPOCAMPANHA].[IX_TIPOCAMPANHA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_TIPOCAMPANHA]
    ON [dbo].[TIPOCAMPANHA]([CLIENTEID] ASC, [TIPOCAMPANHA] ASC);


GO
PRINT N'Creating [dbo].[UFDDD]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[UFDDD] (
    [CODIGO] INT          IDENTITY (1, 1) NOT NULL,
    [DDD]    TINYINT      NOT NULL,
    [REGIAO] VARCHAR (50) NOT NULL,
    [UF]     CHAR (2)     NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[USUARIOS]...';


GO
CREATE TABLE [dbo].[USUARIOS] (
    [USUARIOID]      INT           IDENTITY (1, 1) NOT NULL,
    [NOME]           VARCHAR (100) NOT NULL,
    [LOGINUSER]      VARCHAR (25)  NOT NULL,
    [CLIENTEID]      INT           NOT NULL,
    [SALDO]          INT           NOT NULL,
    [SALDOILIMITADO] BIT           NOT NULL,
    [EMAIL]          VARCHAR (150) NOT NULL,
    [TELEFONE]       NUMERIC (11)  NULL,
    [DATA]           DATETIME      NOT NULL,
    [ATIVO]          BIT           NOT NULL,
    [GRUPOUSUARIOID] INT           NOT NULL,
    [COTA]           INT           NULL,
    [ADMPERFIL]      BIT           NULL,
    [SENHATROCADA]   BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([USUARIOID] ASC)
);


GO
PRINT N'Creating [dbo].[USUARIOS].[IX_USUARIOS_EMAIL]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_EMAIL]
    ON [dbo].[USUARIOS]([EMAIL] ASC);


GO
PRINT N'Creating [dbo].[USUARIOS].[IX_USUARIOS_LOGINUSER]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_LOGINUSER]
    ON [dbo].[USUARIOS]([LOGINUSER] ASC);


GO
PRINT N'Creating [dbo].[USUARIOS_CARTEIRA]...';


GO
CREATE TABLE [dbo].[USUARIOS_CARTEIRA] (
    [CODIGO]     INT IDENTITY (1, 1) NOT NULL,
    [USUARIOID]  INT NOT NULL,
    [CARTEIRAID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);


GO
PRINT N'Creating [dbo].[USUARIOS_CARTEIRA].[IX_USUARIOS_CARTEIRA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_CARTEIRA]
    ON [dbo].[USUARIOS_CARTEIRA]([CARTEIRAID] ASC, [USUARIOID] ASC);


GO
PRINT N'Creating unnamed constraint on [dbo].[CAMPANHA_RETORNO]...';


GO
ALTER TABLE [dbo].[CAMPANHA_RETORNO]
    ADD DEFAULT (getdate()) FOR [DATA];


GO
PRINT N'Creating [dbo].[DF__CARTEIRAS__DATAG__48CFD27E]...';


GO
ALTER TABLE [dbo].[CARTEIRAS]
    ADD CONSTRAINT [DF__CARTEIRAS__DATAG__48CFD27E] DEFAULT (getdate()) FOR [DATA];


GO
PRINT N'Creating unnamed constraint on [dbo].[CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CARTEIRAS]
    ADD DEFAULT 0 FOR [HIGIENIZA];


GO
PRINT N'Creating unnamed constraint on [dbo].[CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CARTEIRAS]
    ADD DEFAULT 0 FOR [ISEXCLUDED];


GO
PRINT N'Creating unnamed constraint on [dbo].[CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES]
    ADD DEFAULT (getdate()) FOR [DATA];


GO
PRINT N'Creating unnamed constraint on [dbo].[CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES]
    ADD DEFAULT 0 FOR [POSPAGO];


GO
PRINT N'Creating unnamed constraint on [dbo].[CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES]
    ADD DEFAULT 0 FOR [SALDO];


GO
PRINT N'Creating unnamed constraint on [dbo].[FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR]
    ADD DEFAULT (getdate()) FOR [DATA];


GO
PRINT N'Creating unnamed constraint on [dbo].[FORNECEDOR_CLIENTE]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CLIENTE]
    ADD DEFAULT GETDATE() FOR [DATAVINCULO];


GO
PRINT N'Creating unnamed constraint on [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]...';


GO
ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]
    ADD DEFAULT 0 FOR [ISRESETED];


GO
PRINT N'Creating unnamed constraint on [dbo].[TIPOCAMPANHA]...';


GO
ALTER TABLE [dbo].[TIPOCAMPANHA]
    ADD DEFAULT 0 FOR [ISEXCLUDED];


GO
PRINT N'Creating unnamed constraint on [dbo].[USUARIOS]...';


GO
ALTER TABLE [dbo].[USUARIOS]
    ADD DEFAULT 0 FOR [SENHATROCADA];


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD CONSTRAINT [FK_CAMPANHAS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD CONSTRAINT [FK_CAMPANHAS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]) ON DELETE SET NULL ON UPDATE SET NULL;


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CLIENTES]...';


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD CONSTRAINT [FK_CAMPANHAS_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_USUARIOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD CONSTRAINT [FK_CAMPANHAS_USUARIOS] FOREIGN KEY ([USUARIOID]) REFERENCES [dbo].[USUARIOS] ([USUARIOID]) ON DELETE SET NULL ON UPDATE SET NULL;


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[CAMPANHAS]
    ADD CONSTRAINT [FK_CAMPANHAS_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_ARQUIVOS_FILESZIP_CAMPANHAS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]
    ADD CONSTRAINT [FK_CAMPANHAS_ARQUIVOS_FILESZIP_CAMPANHAS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO]
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO]
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_USUARIO]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO]
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_USUARIO] FOREIGN KEY ([USUARIOID]) REFERENCES [dbo].[USUARIOS] ([USUARIOID]);


GO
PRINT N'Creating [dbo].[FK_CARTEIRA_TELEFONES_CARTEIRA]...';


GO
ALTER TABLE [dbo].[CARTEIRA_TELEFONES]
    ADD CONSTRAINT [FK_CARTEIRA_TELEFONES_CARTEIRA] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_CLIENTES_CONFIGURACAO_CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES_CONFIGURACAO]
    ADD CONSTRAINT [FK_CLIENTES_CONFIGURACAO_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_CLIENTES_CONTATO_CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES_CONTATO]
    ADD CONSTRAINT [FK_CLIENTES_CONTATO_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CAPACIDADE_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CAPACIDADE]
    ADD CONSTRAINT [FK_FORNECEDOR_CAPACIDADE_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CLIENTE_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CLIENTE]
    ADD CONSTRAINT [FK_FORNECEDOR_CLIENTE_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]);


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CLIENTE_CLIENTES]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CLIENTE]
    ADD CONSTRAINT [FK_FORNECEDOR_CLIENTE_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CONTATO_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CONTATO]
    ADD CONSTRAINT [FK_FORNECEDOR_CONTATO_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_FAIXAS_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_FAIXAS]
    ADD CONSTRAINT [FK_FORNECEDOR_FAIXAS_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_CARTEIRAS_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_CARTEIRAS]
    ADD CONSTRAINT [FK_GESTOR_CARTEIRAS_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_EMAIL_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_EMAIL]
    ADD CONSTRAINT [FK_GESTOR_EMAIL_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_TELEFONES_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_TELEFONES]
    ADD CONSTRAINT [FK_GESTOR_TELEFONES_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GRUPOUSUARIO_PAGINAS_GRUPOUSUARIO]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIO_PAGINAS]
    ADD CONSTRAINT [FK_GRUPOUSUARIO_PAGINAS_GRUPOUSUARIO] FOREIGN KEY ([GRUPOUSUARIOID]) REFERENCES [dbo].[GRUPOUSUARIOS] ([GRUPOUSUARIOID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_IDENTITYSERVER_CLIENTS_CLAIM_IDENTITYSERVER_CLIENTS]...';


GO
ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_CLAIM]
    ADD CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_CLAIM_IDENTITYSERVER_CLIENTS] FOREIGN KEY ([CODIGO]) REFERENCES [dbo].[IDENTITYSERVER_CLIENTS] ([CODIGO]);


GO
PRINT N'Creating [dbo].[FK_IDENTITYSERVER_CLIENTS_SCOPES_IDENTITYSERVER_CLIENTS]...';


GO
ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]
    ADD CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_SCOPES_IDENTITYSERVER_CLIENTS] FOREIGN KEY ([CODIGO]) REFERENCES [dbo].[IDENTITYSERVER_CLIENTS] ([CODIGO]);


GO
PRINT N'Creating [dbo].[FK_PADRAO_POSTAGENS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[PADRAO_POSTAGENS]
    ADD CONSTRAINT [FK_PADRAO_POSTAGENS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_CARTEIRAS_REQUSICAO_RELATORIO]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS]
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_REQUSICAO_RELATORIO] FOREIGN KEY ([REQUISICAOID]) REFERENCES [dbo].[REQUISICAO_RELATORIO] ([REQUISICAOID]);


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_CARTEIRAS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS]
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_EMAILS_REQUISICAO_RELATORIO]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_EMAILS]
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_EMAILS_REQUISICAO_RELATORIO] FOREIGN KEY ([REQUISICAOID]) REFERENCES [dbo].[REQUISICAO_RELATORIO] ([REQUISICAOID]);


GO
PRINT N'Creating [dbo].[FK_USUARIOS_GRUPOUSUARIOS]...';


GO
ALTER TABLE [dbo].[USUARIOS]
    ADD CONSTRAINT [FK_USUARIOS_GRUPOUSUARIOS] FOREIGN KEY ([GRUPOUSUARIOID]) REFERENCES [dbo].[GRUPOUSUARIOS] ([GRUPOUSUARIOID]);


GO
PRINT N'Creating [dbo].[CK_GRUPOUSUARIOS_SALDO]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIOS]
    ADD CONSTRAINT [CK_GRUPOUSUARIOS_SALDO] CHECK (SALDO>=0);


GO
PRINT N'Creating [dbo].[CK_GRUPOUSUARIOS_COTA]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIOS]
    ADD CONSTRAINT [CK_GRUPOUSUARIOS_COTA] CHECK (COTA>=0);


GO
PRINT N'Creating [dbo].[CommaSeparatedListToSingleColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE FUNCTION [dbo].[CommaSeparatedListToSingleColumn]
( 
    @cslist VARCHAR(MAX)
) 
RETURNS @t TABLE 
( 
    Item VARCHAR(64) 
) 
BEGIN  
    DECLARE @spot SMALLINT, @str VARCHAR(8000), @sql VARCHAR(8000)  
     
    WHILE @cslist <> ''  
    BEGIN  
        SET @spot = CHARINDEX(',', @cslist)  
        IF @spot>0  
            BEGIN  
                SET @str = LEFT(@cslist, @spot-1)  
                SET @cslist = RIGHT(@cslist, LEN(@cslist)-@spot)  
            END  
        ELSE  
            BEGIN  
                SET @str = @cslist  
                SET @cslist = ''  
            END  
        INSERT @t SELECT @str 
    END  
    RETURN 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GESTORESSMS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
	CREATE VIEW [dbo].[GESTORESSMS]
		AS
		SELECT 
		G.NOME, G.CLIENTEID, GT.TELEFONE, GE.EMAIL, GC.CARTEIRAID, G.GESTORID, C.CARTEIRA, C.VISIVEL, C.LIMITE
		FROM GESTOR G 
		LEFT JOIN GESTOR_TELEFONES GT ON G.GESTORID=GT.GESTORID
		LEFT JOIN GESTOR_EMAIL GE ON G.GESTORID=GE.GESTORID
		LEFT JOIN GESTOR_CARTEIRAS GC ON G.GESTORID=GC.GESTORID
		LEFT JOIN CARTEIRAS C ON GC.CARTEIRAID=C.CARTEIRAID AND G.CLIENTEID=C.CLIENTEID 
		GROUP BY G.NOME, G.CLIENTEID, GT.TELEFONE, GE.EMAIL, GC.CARTEIRAID, G.GESTORID, C.CARTEIRA, C.VISIVEL, C.LIMITE
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[PAGINA_GRUPO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW dbo.PAGINA_GRUPO 
AS 
SELECT P.PAGINA,  G.GRUPOID, P.PAGINAID FROM PAGINAS P JOIN GRUPOPAGINAS G ON P.GRUPOID=G.GRUPOID
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHA_CONSOLIDADO_ENVIOS_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CAMPANHA_CONSOLIDADO_ENVIOS_PAGINACAO --30,1, '2017-4-26',  '2017-4-29', 1,NULL,0,0
@PaginaSize		INT,
@PaginaAtual	INT,
@DataInicial	DATE,
@DataFinal		DATE,
@ClienteID		INT,
@UsuarioID		INT,
@Paginas		INT OUTPUT,
@Registros		INT OUTPUT
AS
BEGIN
DECLARE @TMP TABLE
(
DATAENVIAR		SMALLDATETIME,
ENVIADA			INT,
EXCLUIDA		INT,
ERRO			INT,
SUSPENSA		INT,
ENTREGUE		INT,
EXPIRADA		INT,
DATADIA			DATE,
FORNECEDORID	INT,
CANCELADA		INT,
USUARIOID		INT,
REGISTROS		INT
);
WITH CONSOLIDADO AS
(
	SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID, ROW_NUMBER() OVER ( ORDER BY CODIGO ) REGISTRO FROM CAMPANHAS_CONSOLIDADO WHERE CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal
)
INSERT @TMP
SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID, REGISTRO FROM CONSOLIDADO ORDER BY DATAENVIAR
	IF(@UsuarioID IS NULL)
		SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE
	ELSE
		SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE AND USUARIOID=@UsuarioID
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHA_RETORNO_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CAMPANHA_RETORNO_PAGINACAO --'2017-4-25', '2017-4-28', 1, null
@DataInicial	DATETIME,
@DataFinal		DATETIME,
@ClienteID		INT,
@Search			VARCHAR(150),
@PageSize		INT,
@PageNumber		INT,
@CarteiraID		INT,
@UsuarioID		INT
AS
BEGIN
CREATE TABLE #TMP(
FORNECEDORID	INT,
TEXTO			VARCHAR(160),
IDCLIENTE		VARCHAR(50),
CELULAR			NUMERIC(12,0),
RETORNOCLIENTE	VARCHAR(320),
CLASSIFICACAO	TINYINT,
ARQUIVO			VARCHAR(255),
CODIGO			INT,
DATARETORNO		DATETIME,
CARTEIRA		VARCHAR(150), 
REGISTROS		INT,
USUARIOID		INT
);
			WITH RETORNOS AS
			(
			SELECT CR.FORNECEDORID, C.TEXTO, C.IDCLIENTE, C.CELULAR, CR.RETORNO, CR.CLASSIFICACAO, CA.ARQUIVO, CODIGO, DATARETORNO,CAT.CARTEIRA,  ROW_NUMBER() OVER ( ORDER BY CODIGO ) REGISTRO, C.USUARIOID FROM CAMPANHA_RETORNO CR 
												LEFT JOIN CAMPANHAS C  ON CR.CAMPANHAID=C.CAMPANHAID
												LEFT JOIN CAMPANHAS_ARQUIVOS CA  ON C.ARQUIVOID=CA.ARQUIVOID
												LEFT JOIN CARTEIRAS CAT ON  C.CARTEIRAID=CAT.CARTEIRAID
												WHERE CR.DATARETORNO BETWEEN @DataInicial AND @DataFinal AND C.CLIENTEID=@ClienteID 
												GROUP BY CR.FORNECEDORID, C.TEXTO, C.IDCLIENTE, C.CELULAR, CR.RETORNO, CR.CLASSIFICACAO, CA.ARQUIVO, C.CAMPANHAID, CODIGO, DATARETORNO, CAT.CARTEIRA, C.USUARIOID
			)
			INSERT INTO #TMP
			SELECT FORNECEDORID, TEXTO, IDCLIENTE, CELULAR, RETORNO, CLASSIFICACAO, ARQUIVO, CODIGO, DATARETORNO, CARTEIRA, REGISTRO, USUARIOID FROM RETORNOS

			SELECT CLASSIFICACAO, COUNT(CLASSIFICACAO) QUANTIDADE FROM #TMP GROUP BY CLASSIFICACAO
			SELECT FORNECEDORID, TEXTO, IDCLIENTE, CELULAR, RETORNO, CLASSIFICACAO, ARQUIVO, CODIGO, DATARETORNO, CARTEIRA, REGISTRO, USUARIOID FROM #TMP WHERE CARTEIRAID=@CarteiraID ORDER BY DATARETORNO OFFSET @PageSize * (@PageNumber - 1) ROWS FETCH NEXT @PageSize ROWS ONLY;
			END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CONSOLIDADO_CAMPANHAS_AGENDADA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CONSOLIDADO_CAMPANHAS_AGENDADA
@DataInicial	DATE,
@DataFinal		DATE
AS
CREATE TABLE #TMP(
QUANTIDADE		INT,
ARQUIVOID		INT, 
FORNECEDORID	INT,
CARTEIRAID		INT, 
DATAENVIAR		SMALLDATETIME, 
DATADIA			DATE,
STATUSENVIO		TINYINT,
STATUSREPORT	TINYINT,
CLIENTEID		INT,
USUARIOID		INT,
SPCAPITAL		INT,
SPGRANDE		INT,
DEMAISDDD		INT
);
BEGIN
WITH ENVIADAS AS
(
	SELECT CAMPANHAID, ARQUIVOID, CARTEIRAID, STATUSREPORT, STATUSENVIO, FORNECEDORID, DATAENVIAR, DATADIA, CLIENTEID, USUARIOID, 
	CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)=11 THEN 1 ELSE 0 END SPCAPITAL
	,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>11 AND CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)<=19 THEN 1 ELSE 0 END SPGRANDE
	,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>19 THEN 1 ELSE 0 END DEMAISDDD
 FROM CAMPANHAS WHERE DATADIA BETWEEN @DataInicial AND @DataFinal
)
INSERT #TMP
SELECT COUNT(CAMPANHAID), ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA, 
CASE WHEN STATUSENVIO=1 OR STATUSENVIO=0 THEN 3 ELSE STATUSENVIO END, STATUSREPORT, CLIENTEID, USUARIOID
,SUM(SPCAPITAL) SPCAPITAL, SUM(SPGRANDE) SPGRANDE, SUM(DEMAISDDD) DEMAISDDD
FROM ENVIADAS GROUP BY ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA, STATUSENVIO, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID

DECLARE @TMP TABLE (
CODIGO			INT IDENTITY(1,1),
CARTEIRAID		INT, 
ARQUIVOID		INT, 
DATAENVIAR		SMALLDATETIME, 
DATADIA			DATE,
FORNECEDORID	INT,
STATUSREPORT	TINYINT,
ERRO			INT,
SUSPENSA		INT,
CANCELADA		INT,
CLIENTEID		INT,
USUARIOID		INT,
ENVIADA			INT,
SPCAPITAL		INT,
SPGRANDE		INT,
DEMAISDDD		INT
);

INSERT @TMP
SELECT CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, ISNULL(STATUSREPORT, 99) STATUSREPORT,ISNULL([3],0) ERRO, ISNULL([4],0) SUSPENSA, ISNULL([5],0) CANCELADA, CLIENTEID, USUARIOID, ISNULL([2],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM 
(SELECT QUANTIDADE, STATUSENVIO, CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID, SPCAPITAL, SPGRANDE, DEMAISDDD FROM #TMP) AS PVT PIVOT(SUM(QUANTIDADE) FOR STATUSENVIO IN([2],[3],[4],[5])) AS P;

WITH CONSOLIDADA AS(
SELECT SUSPENSA, CANCELADA, ERRO, ARQUIVOID, CARTEIRAID, DATAENVIAR, FORNECEDORID, DATADIA, ISNULL([68],0) EXCLUIDA, ISNULL([0], 0) ENTREGUE, ISNULL([70],0) EXPIRADA, CLIENTEID, USUARIOID, ISNULL([99],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM 
(SELECT SUSPENSA, ERRO, CANCELADA, ARQUIVOID, DATAENVIAR, FORNECEDORID, STATUSREPORT, CARTEIRAID, DATADIA, CLIENTEID, USUARIOID, ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM @TMP) AS PVT PIVOT (SUM(ENVIADA) FOR STATUSREPORT IN([68],[0],[70], [99])) AS P)

INSERT CAMPANHAS_CONSOLIDADO
SELECT CARTEIRAID, ARQUIVOID,  DATAENVIAR, USUARIOID, CLIENTEID,EXCLUIDA,ERRO,SUSPENSA,ENTREGUE,EXPIRADA, DATADIA, FORNECEDORID, CANCELADA,SPCAPITAL, SPGRANDE, DEMAISDDD, ENVIADA FROM CONSOLIDADA C

DROP TABLE #TMP
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CONSOLIDADO_STATUS_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CONSOLIDADO_STATUS_PAGINACAO --10, 1,'2017-4-26', '2017-4-30', 1, NULL, 0,0,NULL, 1,1
@PaginaSize		INT,
@PaginaAtual	INT,
@DataInicial	DATE,
@DataFinal		DATE,
@ClienteID		INT,
@UsuarioID		INT,
@Paginas		INT OUTPUT,
@Registros		INT OUTPUT,
@Search			VARCHAR(150),
@StatusEnvio	TINYINT,
@CarteiraID		INT
AS
BEGIN
DECLARE @TMP TABLE (
ARQUIVO			VARCHAR(255),
ARQUIVOID		INT,
CARTEIRA		VARCHAR(150), 
CARTEIRAID		INT,
DATAENVIAR		SMALLDATETIME,
QUANTIDADE		INT,
REGISTROS		INT,
USUARIOID		INT
);
IF @Search IS NULL
BEGIN
	WITH CONSOLIDADA AS
	(
		SELECT C.CARTEIRAID, C.ARQUIVOID, DATAENVIAR, C.USUARIOID, CAMPANHAID, CAT.CARTEIRA FROM CAMPANHAS C
												JOIN CARTEIRAS CAT ON C.CARTEIRAID=CAT.CARTEIRAID
		WHERE C.CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal AND STATUSENVIO=@StatusEnvio
	)
	INSERT @TMP
	SELECT  ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, COUNT(CAMPANHAID) QUANTIDADE, ROW_NUMBER() OVER ( ORDER BY DATAENVIAR ) REGISTRO, C.USUARIOID 
	FROM CONSOLIDADA C
	LEFT JOIN CAMPANHAS_ARQUIVOS CA ON C.ARQUIVOID=CA.ARQUIVOID
	GROUP BY ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, C.USUARIOID ORDER BY DATAENVIAR
END
ELSE
BEGIN	
WITH CONSOLIDADA AS
	(
				SELECT C.CARTEIRAID, C.ARQUIVOID, DATAENVIAR, C.USUARIOID, CAMPANHAID, CAT.CARTEIRA FROM CAMPANHAS C
										JOIN CARTEIRAS CAT ON C.CARTEIRAID=CAT.CARTEIRAID
										WHERE C.CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal AND STATUSENVIO=@StatusEnvio
	)
	INSERT @TMP
	SELECT  ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, COUNT(CAMPANHAID) QUANTIDADE, ROW_NUMBER() OVER ( ORDER BY DATAENVIAR ) REGISTRO, C.USUARIOID 
	FROM CONSOLIDADA C 
	LEFT JOIN CAMPANHAS_ARQUIVOS CA ON C.ARQUIVOID=CA.ARQUIVOID
	WHERE CARTEIRA LIKE '%'+@Search+'%' OR ARQUIVO LIKE '%'+@Search+'%'
	GROUP BY ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, C.USUARIOID ORDER BY DATAENVIAR
END
	DECLARE @TOTALREGISTROS INT=(SELECT COUNT(ARQUIVO) FROM @TMP)
	SET @PAGINAS=@TOTALREGISTROS/@PAGINASIZE
	SET @Registros=@TOTALREGISTROS

	IF(@UsuarioID IS NULL)
		SELECT ARQUIVO, ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, QUANTIDADE, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE
	ELSE
		SELECT ARQUIVO, ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, QUANTIDADE, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE AND USUARIOID=@UsuarioID

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[HIGIENIZA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.HIGIENIZA
@Celulares			VARCHAR(MAX),
@DataInicial		DATE,
@DataFinal			DATE,
@ClienteID			INT
AS
DECLARE	@DELIMITER		CHAR(1) = ',';
										DECLARE		@XML			XML = CAST(('<X>'+replace(@Celulares, @DELIMITER ,'</X><X>')+'</X>') AS XML);
	
										CREATE TABLE #TMP_CELLS
										(
											CODIGO	INT	IDENTITY (1,1), 
											CELULAR	NUMERIC(11,0)
										);
										INSERT #TMP_CELLS 
										SELECT N.value('.', 'NUMERIC(11,0)') AS CELULAR FROM @XML.nodes('X') AS T(N);

										SELECT C.CELULAR FROM CAMPANHAS C JOIN #TMP_CELLS TC ON C.CELULAR=TC.CELULAR WHERE CARTEIRAID=1 AND DATAENVIAR BETWEEN '2017-4-1' AND '2017-4-1' AND CLIENTEID=1 AND STATUSENVIO=2
										DROP TABLE #TMP_CELLS
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating Permission...';


GO
GRANT CONNECT TO [moneoci];


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03dbbf7a-d37a-40a9-9920-87d910bbc978')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03dbbf7a-d37a-40a9-9920-87d910bbc978')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b77925ed-d5cc-47a8-9eeb-5068579bed62')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b77925ed-d5cc-47a8-9eeb-5068579bed62')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '330d2e06-bb61-4aa5-82e8-aa553960e5b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('330d2e06-bb61-4aa5-82e8-aa553960e5b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '202feca3-d0ff-4985-9d10-53f860aea015')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('202feca3-d0ff-4985-9d10-53f860aea015')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ef8c6949-b61f-41e0-b505-1b1bdeed9d1e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ef8c6949-b61f-41e0-b505-1b1bdeed9d1e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f455c56e-0b64-4dea-a8f8-384fc694eec8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f455c56e-0b64-4dea-a8f8-384fc694eec8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c3a73694-3a2c-4f2d-b365-0bd71ef8a992')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c3a73694-3a2c-4f2d-b365-0bd71ef8a992')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1ff6824e-a2c5-43b8-988c-f5e418989159')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1ff6824e-a2c5-43b8-988c-f5e418989159')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0762d13-5c34-4752-9e3c-b072dec5211a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0762d13-5c34-4752-9e3c-b072dec5211a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '61eb7677-30ee-444e-aed3-a2ac21f0d0d6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('61eb7677-30ee-444e-aed3-a2ac21f0d0d6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f761f5a8-f093-45c9-913e-5ec4b3018c19')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f761f5a8-f093-45c9-913e-5ec4b3018c19')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'da68ac9d-0db0-420b-b770-02253210591d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('da68ac9d-0db0-420b-b770-02253210591d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0151b716-201d-451a-b104-61ac1ecac791')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0151b716-201d-451a-b104-61ac1ecac791')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '144a6bf2-cc7c-4314-8d74-4f81f6175fe6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('144a6bf2-cc7c-4314-8d74-4f81f6175fe6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '62cc0f2b-9cdc-47d9-9f08-3271cee2e1c5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('62cc0f2b-9cdc-47d9-9f08-3271cee2e1c5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b1808ac1-ad01-451a-956c-bac655c7aae3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b1808ac1-ad01-451a-956c-bac655c7aae3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '15623f02-3870-4786-b9f4-7685456b783f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('15623f02-3870-4786-b9f4-7685456b783f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6cb94a2c-bc0c-40f1-8f84-4d3b6c7a5a0a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6cb94a2c-bc0c-40f1-8f84-4d3b6c7a5a0a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1d718a52-5d35-43e8-b51f-610305a7a952')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1d718a52-5d35-43e8-b51f-610305a7a952')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '23d072c5-90e4-436f-aae8-856c0bbf4ce4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('23d072c5-90e4-436f-aae8-856c0bbf4ce4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a87d23a6-fe44-4722-a5c0-ae8401ba1560')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a87d23a6-fe44-4722-a5c0-ae8401ba1560')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '085ed727-4e98-4712-94a5-267f87000a2c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('085ed727-4e98-4712-94a5-267f87000a2c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4e6e3942-21c9-4605-ad39-c8b7702ae770')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4e6e3942-21c9-4605-ad39-c8b7702ae770')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '164eb5af-20bb-4214-8331-149d9d754e0f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('164eb5af-20bb-4214-8331-149d9d754e0f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2a4e5900-0ae3-46e1-945d-9bc2832c61cf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2a4e5900-0ae3-46e1-945d-9bc2832c61cf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4e1f8538-4233-4d7a-8ea5-198681f5e68a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4e1f8538-4233-4d7a-8ea5-198681f5e68a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9fee87c1-48b5-4984-8735-bd29327e6807')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9fee87c1-48b5-4984-8735-bd29327e6807')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f82165c7-dcd9-477d-8543-a90018f3d412')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f82165c7-dcd9-477d-8543-a90018f3d412')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a5a326a0-d4b2-4ec5-a251-34f28efd00f2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a5a326a0-d4b2-4ec5-a251-34f28efd00f2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8a46db95-5188-4c1e-bd9d-bc97e15ea2e2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8a46db95-5188-4c1e-bd9d-bc97e15ea2e2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3a6f0dca-0347-4edd-b30e-5585114fa727')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3a6f0dca-0347-4edd-b30e-5585114fa727')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0edc63a9-e0e8-408f-8184-e720375de75a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0edc63a9-e0e8-408f-8184-e720375de75a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b064eecf-839d-4dbb-ac88-02636213b209')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b064eecf-839d-4dbb-ac88-02636213b209')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5fb88459-05fb-48bb-aa6a-f3f5da346508')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5fb88459-05fb-48bb-aa6a-f3f5da346508')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dc7eb513-1871-4515-b243-ba9625a52614')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dc7eb513-1871-4515-b243-ba9625a52614')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0431bf6c-c4b7-40ad-8c5b-6f64f0fe0e53')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0431bf6c-c4b7-40ad-8c5b-6f64f0fe0e53')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c8a20adb-0928-48f9-ba1c-2a305e8d8e89')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c8a20adb-0928-48f9-ba1c-2a305e8d8e89')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '13384730-2d74-4aaf-9052-9c28d9ce346a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('13384730-2d74-4aaf-9052-9c28d9ce346a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '100f9d7e-03dd-4554-89b5-c5476b11ea99')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('100f9d7e-03dd-4554-89b5-c5476b11ea99')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bcef732b-c227-4097-b30a-d935560b1e31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bcef732b-c227-4097-b30a-d935560b1e31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '51aa4387-f99d-4691-b040-dea3995fae5b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('51aa4387-f99d-4691-b040-dea3995fae5b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c65fa66d-0444-46d2-9035-a7b73aa073e0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c65fa66d-0444-46d2-9035-a7b73aa073e0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dc40a696-5c52-455c-8af8-56eba8d7d9d5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dc40a696-5c52-455c-8af8-56eba8d7d9d5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9572887e-9277-40f7-8d4d-8afc4376294b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9572887e-9277-40f7-8d4d-8afc4376294b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '594c0b4e-3c7c-4240-b090-feecfee7b91e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('594c0b4e-3c7c-4240-b090-feecfee7b91e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '92d474f9-08f3-4252-94cd-63f41af52786')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('92d474f9-08f3-4252-94cd-63f41af52786')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1b94f522-0b56-4bc4-a27c-397560ea852a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1b94f522-0b56-4bc4-a27c-397560ea852a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fad832db-bdab-4175-81a1-287ab0cf4411')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fad832db-bdab-4175-81a1-287ab0cf4411')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '610fddf1-b778-4156-a374-abf39f6dd0f7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('610fddf1-b778-4156-a374-abf39f6dd0f7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ac56450f-b7b4-4990-959f-a8327de202d0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ac56450f-b7b4-4990-959f-a8327de202d0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bcb321ad-8372-4cb5-9e2d-28930e927526')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bcb321ad-8372-4cb5-9e2d-28930e927526')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '99237be5-4ae4-426b-ad9b-dd6921883acc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('99237be5-4ae4-426b-ad9b-dd6921883acc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e1d11e3d-b66e-47a2-b0ac-704fdd1f5764')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e1d11e3d-b66e-47a2-b0ac-704fdd1f5764')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3d83f2d5-5856-47e5-a853-7043a25bc82c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3d83f2d5-5856-47e5-a853-7043a25bc82c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '792cc854-5f36-426a-80c1-7ccba6006e34')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('792cc854-5f36-426a-80c1-7ccba6006e34')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a8540c52-9559-4615-9487-ec7a50cca93c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a8540c52-9559-4615-9487-ec7a50cca93c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cca2ebca-5778-4555-affc-7758cd6e1ca3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cca2ebca-5778-4555-affc-7758cd6e1ca3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7988352c-cba7-45c9-b059-200235bab30c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7988352c-cba7-45c9-b059-200235bab30c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '71fe831d-7be1-4ccb-82d4-53fd712786ae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('71fe831d-7be1-4ccb-82d4-53fd712786ae')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
