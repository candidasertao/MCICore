/*
Deployment script for moneosi

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "moneosi"
:setvar DefaultFilePrefix "moneosi"
:setvar DefaultDataPath "D:\RDSDBDATA\DATA\"
:setvar DefaultLogPath "D:\RDSDBDATA\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[BOLETOLANDING]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BOLETOLANDING] (
    [CODIGO]               INT                 IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]              VARCHAR (250)       NOT NULL,
    [CARTEIRAID]           INT                 NOT NULL,
    [CLIENTEID]            INT                 NOT NULL,
    [ACEITE]               CHAR (1)            NOT NULL,
    [AGENCIACONTA]         VARCHAR (50)        NOT NULL,
    [BENEFICIARIO]         VARCHAR (150)       NOT NULL,
    [ENDERECO]             VARCHAR (150)       NOT NULL,
    [CIDADE]               VARCHAR (100)       NOT NULL,
    [UF]                   CHAR (2)            NOT NULL,
    [CEP]                  INT                 NOT NULL,
    [PAGADOR]              VARCHAR (150)       NOT NULL,
    [VENCIMENTO]           DATE                NULL,
    [CPFCNPJ]              NUMERIC (14)        NOT NULL,
    [CARTEIRA]             VARCHAR (25)        NULL,
    [CONTRATO]             VARCHAR (300)       NOT NULL,
    [DATADOCUMENTO]        DATE                NOT NULL,
    [DATAPROCESSAMENTO]    DATE                NOT NULL,
    [NUMERODOCUMENTO]      VARCHAR (26)        NOT NULL,
    [INSTRUCOES]           VARCHAR (500)       NOT NULL,
    [NOSSONUMERO]          VARCHAR (26)        NOT NULL,
    [VALORCOBRADO]         MONEY               NULL,
    [VALORDOCUMENTO]       MONEY               NULL,
    [DESCONTO]             MONEY               NULL,
    [MORAMULTA]            MONEY               NULL,
    [ESPECIEDOCUMENTO]     CHAR (2)            NOT NULL,
    [OUTROSACRESCIMOS]     MONEY               NULL,
    [PARCELAS]             INT                 NULL,
    [VALORTOTAL]           MONEY               NULL,
    [QUANTIDADE]           INT                 NULL,
    [VALORMOEDA]           VARCHAR (20)        NULL,
    [PLANOS]               VARCHAR (20)        NULL,
    [VALORDOCUMENTOBOLETO] MONEY               NULL,
    [LINHADIGITAVEL]       CHAR (54)           NOT NULL,
    [LOCALPAGAMENTO]       VARCHAR (300)       NOT NULL,
    [IDBOLETO]             VARCHAR (50) SPARSE NULL
) ON [PRIMARY];

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BOLETOLANDING])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BOLETOLANDING] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BOLETOLANDING] ([CODIGO], [ARQUIVO], [CARTEIRAID], [CLIENTEID], [ACEITE], [AGENCIACONTA], [BENEFICIARIO], [ENDERECO], [CIDADE], [UF], [CEP], [PAGADOR], [VENCIMENTO], [CPFCNPJ], [CARTEIRA], [CONTRATO], [DATADOCUMENTO], [DATAPROCESSAMENTO], [NUMERODOCUMENTO], [INSTRUCOES], [NOSSONUMERO], [VALORCOBRADO], [VALORDOCUMENTO], [DESCONTO], [MORAMULTA], [ESPECIEDOCUMENTO], [OUTROSACRESCIMOS], [PARCELAS], [VALORTOTAL], [QUANTIDADE], [VALORMOEDA], [PLANOS], [VALORDOCUMENTOBOLETO], [LINHADIGITAVEL], [LOCALPAGAMENTO], [IDBOLETO])
        SELECT [CODIGO],
               [ARQUIVO],
               [CARTEIRAID],
               [CLIENTEID],
               [ACEITE],
               [AGENCIACONTA],
               [BENEFICIARIO],
               [ENDERECO],
               [CIDADE],
               [UF],
               [CEP],
               [PAGADOR],
               [VENCIMENTO],
               [CPFCNPJ],
               [CARTEIRA],
               [CONTRATO],
               [DATADOCUMENTO],
               [DATAPROCESSAMENTO],
               [NUMERODOCUMENTO],
               [INSTRUCOES],
               [NOSSONUMERO],
               [VALORCOBRADO],
               [VALORDOCUMENTO],
               [DESCONTO],
               [MORAMULTA],
               [ESPECIEDOCUMENTO],
               [OUTROSACRESCIMOS],
               [PARCELAS],
               [VALORTOTAL],
               [QUANTIDADE],
               [VALORMOEDA],
               [PLANOS],
               [VALORDOCUMENTOBOLETO],
               [LINHADIGITAVEL],
               [LOCALPAGAMENTO],
               [IDBOLETO]
        FROM   [dbo].[BOLETOLANDING];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BOLETOLANDING] OFF;
    END

DROP TABLE [dbo].[BOLETOLANDING];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BOLETOLANDING]', N'BOLETOLANDING';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[CAMPANHA_RETORNO]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CAMPANHA_RETORNO] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID]  INT           NOT NULL,
    [RETORNO]       VARCHAR (450) NOT NULL,
    [DATARETORNO]   DATETIME      NOT NULL,
    [DATA]          DATETIME      DEFAULT (getdate()) NOT NULL,
    [CAMPANHAID]    BIGINT        NOT NULL,
    [CLASSIFICACAO] TINYINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CAMPANHA_RETORNO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHA_RETORNO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CAMPANHA_RETORNO] ([CODIGO], [FORNECEDORID], [RETORNO], [DATARETORNO], [DATA], [CAMPANHAID], [CLASSIFICACAO])
        SELECT   [CODIGO],
                 [FORNECEDORID],
                 [RETORNO],
                 [DATARETORNO],
                 [DATA],
                 [CAMPANHAID],
                 [CLASSIFICACAO]
        FROM     [dbo].[CAMPANHA_RETORNO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHA_RETORNO] OFF;
    END

DROP TABLE [dbo].[CAMPANHA_RETORNO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CAMPANHA_RETORNO]', N'CAMPANHA_RETORNO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
The column [dbo].[CAMPANHAS].[DDD] is being dropped, data loss could occur.
*/
GO
PRINT N'Starting rebuilding table [dbo].[CAMPANHAS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CAMPANHAS] (
    [CAMPANHAID]          BIGINT               IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID]          INT                  NULL,
    [DATAENVIAR]          SMALLDATETIME        NOT NULL,
    [DATA]                DATETIME             NOT NULL,
    [OPERADORAID]         TINYINT              NOT NULL,
    [CLIENTEID]           INT                  NOT NULL,
    [USUARIOID]           INT                  NULL,
    [FORNECEDORID]        INT                  NOT NULL,
    [IDCLIENTE]           VARCHAR (100) SPARSE NULL,
    [STATUSENVIO]         TINYINT              NOT NULL,
    [TIPOCAMPANHAID]      INT                  NULL,
    [TIPOSMS]             TINYINT              NOT NULL,
    [CELULAR]             NUMERIC (12)         NOT NULL,
    [STATUSREPORT]        TINYINT              NULL,
    [DATAREPORT]          DATETIME             NULL,
    [TEXTO]               VARCHAR (320)        NOT NULL,
    [MESSAGEID]           VARCHAR (20) SPARSE  NULL,
    [ARQUIVOID]           INT                  NULL,
    [DATADIA]             DATE                 NOT NULL,
    [DATAENVIOFORNECEDOR] DATETIME             NULL,
    [DDD]                 AS                   CAST ((SUBSTRING(CAST ([CELULAR] AS VARCHAR (11)), (0), (3))) AS TINYINT),
    CONSTRAINT [tmp_ms_xx_constraint_PK__CAMPANHA__593453D3C31FB19A1] PRIMARY KEY CLUSTERED ([CAMPANHAID] ASC, [DATAENVIAR] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CAMPANHAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CAMPANHAS] ([CAMPANHAID], [DATAENVIAR], [CARTEIRAID], [DATA], [OPERADORAID], [CLIENTEID], [USUARIOID], [FORNECEDORID], [IDCLIENTE], [STATUSENVIO], [TIPOCAMPANHAID], [TIPOSMS], [CELULAR], [STATUSREPORT], [DATAREPORT], [TEXTO], [MESSAGEID], [ARQUIVOID], [DATADIA], [DATAENVIOFORNECEDOR])
        SELECT   [CAMPANHAID],
                 [DATAENVIAR],
                 [CARTEIRAID],
                 [DATA],
                 [OPERADORAID],
                 [CLIENTEID],
                 [USUARIOID],
                 [FORNECEDORID],
                 [IDCLIENTE],
                 [STATUSENVIO],
                 [TIPOCAMPANHAID],
                 [TIPOSMS],
                 [CELULAR],
                 [STATUSREPORT],
                 [DATAREPORT],
                 [TEXTO],
                 [MESSAGEID],
                 [ARQUIVOID],
                 [DATADIA],
                 [DATAENVIOFORNECEDOR]
        FROM     [dbo].[CAMPANHAS]
        ORDER BY [CAMPANHAID] ASC, [DATAENVIAR] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS] OFF;
    END

DROP TABLE [dbo].[CAMPANHAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CAMPANHAS]', N'CAMPANHAS';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK__CAMPANHA__593453D3C31FB19A1]', N'PK__CAMPANHA__593453D3C31FB19A', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CAMPANHAS].[ix_CAMPANHAS_CELULAR_includes]...';


GO
CREATE NONCLUSTERED INDEX [ix_CAMPANHAS_CELULAR_includes]
    ON [dbo].[CAMPANHAS]([CELULAR] ASC)
    INCLUDE([CLIENTEID], [IDCLIENTE]) WITH (FILLFACTOR = 90);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_MONITORIA_filtered]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_MONITORIA_filtered]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [DATADIA] ASC)
    INCLUDE([CARTEIRAID], [DATAENVIAR], [USUARIOID], [FORNECEDORID], [STATUSENVIO], [ARQUIVOID], [DATAENVIOFORNECEDOR]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_UPDATES]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_UPDATES]
    ON [dbo].[CAMPANHAS]([CARTEIRAID] ASC, [DATAENVIAR] ASC, [CLIENTEID] ASC, [ARQUIVOID] ASC)
    INCLUDE([CAMPANHAID], [STATUSENVIO]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_STATUSCAMPANHAS]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_STATUSCAMPANHAS]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [STATUSENVIO] ASC, [DATADIA] ASC)
    INCLUDE([CARTEIRAID], [DATAENVIAR], [OPERADORAID], [FORNECEDORID], [IDCLIENTE], [CELULAR], [TEXTO], [ARQUIVOID]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHAS_RELATORIO_DETALHADO]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHAS_RELATORIO_DETALHADO]
    ON [dbo].[CAMPANHAS]([CLIENTEID] ASC, [DATADIA] ASC)
    INCLUDE([DATAENVIAR], [OPERADORAID], [IDCLIENTE], [CELULAR], [STATUSREPORT], [DATAREPORT], [TEXTO], [STATUSENVIO], [CARTEIRAID], [ARQUIVOID], [TIPOCAMPANHAID]);


GO
PRINT N'Creating [dbo].[CAMPANHAS].[IX_CAMPANHA_PENDENTE]...';


GO
CREATE NONCLUSTERED INDEX [IX_CAMPANHA_PENDENTE]
    ON [dbo].[CAMPANHAS]([STATUSENVIO] ASC, [DATADIA] ASC)
    INCLUDE([CAMPANHAID], [OPERADORAID], [CLIENTEID], [FORNECEDORID], [CELULAR], [TEXTO]) WHERE ([STATUSENVIO]=1);


GO
PRINT N'Starting rebuilding table [dbo].[CAMPANHAS_ARQUIVOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS] (
    [ARQUIVOID] INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]   VARCHAR (255) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [USUARIOID] INT           NULL,
    [DATA]      DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([ARQUIVOID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CAMPANHAS_ARQUIVOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS] ([ARQUIVOID], [ARQUIVO], [CLIENTEID], [USUARIOID], [DATA])
        SELECT   [ARQUIVOID],
                 [ARQUIVO],
                 [CLIENTEID],
                 [USUARIOID],
                 [DATA]
        FROM     [dbo].[CAMPANHAS_ARQUIVOS]
        ORDER BY [ARQUIVOID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS] OFF;
    END

DROP TABLE [dbo].[CAMPANHAS_ARQUIVOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS]', N'CAMPANHAS_ARQUIVOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS].[IX_CAMPANHAS_ARQUIVOS_ARQUIVO_CLIENTEID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CAMPANHAS_ARQUIVOS_ARQUIVO_CLIENTEID]
    ON [dbo].[CAMPANHAS_ARQUIVOS]([ARQUIVO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS_FILESZIP] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]   VARCHAR (250) NOT NULL,
    [ARQUIVOID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS_FILESZIP] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS_FILESZIP] ([CODIGO], [ARQUIVO], [ARQUIVOID])
        SELECT   [CODIGO],
                 [ARQUIVO],
                 [ARQUIVOID]
        FROM     [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS_FILESZIP] OFF;
    END

DROP TABLE [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CAMPANHAS_ARQUIVOS_FILESZIP]', N'CAMPANHAS_ARQUIVOS_FILESZIP';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP].[IX_CAMPANHAS_ARQUIVOS_FILESZIP_ARQUIVO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CAMPANHAS_ARQUIVOS_FILESZIP_ARQUIVO]
    ON [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP]([ARQUIVO] ASC);


GO
/*
The column [dbo].[CAMPANHAS_CONSOLIDADO].[ENVIADAS] is being dropped, data loss could occur.

The column [dbo].[CAMPANHAS_CONSOLIDADO].[NAOENVIADAS] is being dropped, data loss could occur.
*/
GO
PRINT N'Starting rebuilding table [dbo].[CAMPANHAS_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CAMPANHAS_CONSOLIDADO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID]   INT           NOT NULL,
    [ARQUIVOID]    INT           NULL,
    [DATAENVIAR]   SMALLDATETIME NOT NULL,
    [USUARIOID]    INT           NULL,
    [CLIENTEID]    INT           NOT NULL,
    [EXCLUIDA]     INT           NOT NULL,
    [ERRO]         INT           NOT NULL,
    [SUSPENSA]     INT           NOT NULL,
    [ENTREGUE]     INT           NOT NULL,
    [EXPIRADA]     INT           NOT NULL,
    [DATADIA]      DATE          NOT NULL,
    [FORNECEDORID] INT           NOT NULL,
    [CANCELADA]    INT           NOT NULL,
    [SPCAPITAL]    INT           NOT NULL,
    [SPGRANDE]     INT           NOT NULL,
    [DEMAISDDD]    INT           NOT NULL,
    [ENVIADA]      INT           NOT NULL,
    [ENVIADAS]     AS            ENTREGUE + EXPIRADA + EXCLUIDA + ENVIADA,
    [NAOENVIADAS]  AS            ERRO + CANCELADA + SUSPENSA,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CAMPANHAS_CONSOLIDADO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_CONSOLIDADO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CAMPANHAS_CONSOLIDADO] ([CODIGO], [CARTEIRAID], [ARQUIVOID], [DATAENVIAR], [USUARIOID], [CLIENTEID], [EXCLUIDA], [ERRO], [SUSPENSA], [ENTREGUE], [EXPIRADA], [DATADIA], [FORNECEDORID], [CANCELADA], [SPCAPITAL], [SPGRANDE], [DEMAISDDD], [ENVIADA])
        SELECT   [CODIGO],
                 [CARTEIRAID],
                 [ARQUIVOID],
                 [DATAENVIAR],
                 [USUARIOID],
                 [CLIENTEID],
                 [EXCLUIDA],
                 [ERRO],
                 [SUSPENSA],
                 [ENTREGUE],
                 [EXPIRADA],
                 [DATADIA],
                 [FORNECEDORID],
                 [CANCELADA],
                 [SPCAPITAL],
                 [SPGRANDE],
                 [DEMAISDDD],
                 [ENVIADA]
        FROM     [dbo].[CAMPANHAS_CONSOLIDADO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CAMPANHAS_CONSOLIDADO] OFF;
    END

DROP TABLE [dbo].[CAMPANHAS_CONSOLIDADO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CAMPANHAS_CONSOLIDADO]', N'CAMPANHAS_CONSOLIDADO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[CARTEIRA_TELEFONES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CARTEIRA_TELEFONES] (
    [CODIGO]     INT          IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID] INT          NOT NULL,
    [NUMERO]     NUMERIC (11) NOT NULL,
    [DESCRICAO]  VARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CARTEIRA_TELEFONES])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CARTEIRA_TELEFONES] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CARTEIRA_TELEFONES] ([CODIGO], [CARTEIRAID], [NUMERO], [DESCRICAO])
        SELECT   [CODIGO],
                 [CARTEIRAID],
                 [NUMERO],
                 [DESCRICAO]
        FROM     [dbo].[CARTEIRA_TELEFONES]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CARTEIRA_TELEFONES] OFF;
    END

DROP TABLE [dbo].[CARTEIRA_TELEFONES];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CARTEIRA_TELEFONES]', N'CARTEIRA_TELEFONES';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CARTEIRA_TELEFONES].[IX_CARTEIRA_TELEFONE]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CARTEIRA_TELEFONE]
    ON [dbo].[CARTEIRA_TELEFONES]([CARTEIRAID] ASC, [NUMERO] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CARTEIRAS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CARTEIRAS] (
    [CARTEIRAID]       INT           IDENTITY (1, 1) NOT NULL,
    [CARTEIRA]         VARCHAR (150) NOT NULL,
    [IDCARTEIRA]       VARCHAR (50)  NULL,
    [USUARIOID]        INT           NULL,
    [CLIENTEID]        INT           NOT NULL,
    [DATA]             DATETIME      CONSTRAINT [DF__CARTEIRAS__DATAG__48CFD27E] DEFAULT (getdate()) NOT NULL,
    [LIMITE]           INT           NULL,
    [PERIODICIDADE]    SMALLINT      NULL,
    [DIAINICIO]        INT           NULL,
    [PORCENTAGEMAVISO] INT           NULL,
    [VISIVEL]          BIT           NOT NULL,
    [HIGIENIZA]        BIT           DEFAULT 0 NOT NULL,
    [DIASHIGIENIZACAO] INT           NULL,
    [SEGMENTACAOID]    INT           NULL,
    [HORALIMITE]       TIME (7)      NULL,
    [BLOQUEIOENVIO]    BIT           NULL,
    [ISEXCLUDED]       BIT           DEFAULT 0 NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK__CARTEIRA__1ACAB244DB6FFCF31] PRIMARY KEY CLUSTERED ([CARTEIRAID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CARTEIRAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CARTEIRAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CARTEIRAS] ([CARTEIRAID], [CARTEIRA], [IDCARTEIRA], [USUARIOID], [CLIENTEID], [DATA], [LIMITE], [PERIODICIDADE], [DIAINICIO], [PORCENTAGEMAVISO], [VISIVEL], [HIGIENIZA], [DIASHIGIENIZACAO], [SEGMENTACAOID], [HORALIMITE], [BLOQUEIOENVIO], [ISEXCLUDED])
        SELECT   [CARTEIRAID],
                 [CARTEIRA],
                 [IDCARTEIRA],
                 [USUARIOID],
                 [CLIENTEID],
                 [DATA],
                 [LIMITE],
                 [PERIODICIDADE],
                 [DIAINICIO],
                 [PORCENTAGEMAVISO],
                 [VISIVEL],
                 [HIGIENIZA],
                 [DIASHIGIENIZACAO],
                 [SEGMENTACAOID],
                 [HORALIMITE],
                 [BLOQUEIOENVIO],
                 [ISEXCLUDED]
        FROM     [dbo].[CARTEIRAS]
        ORDER BY [CARTEIRAID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CARTEIRAS] OFF;
    END

DROP TABLE [dbo].[CARTEIRAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CARTEIRAS]', N'CARTEIRAS';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK__CARTEIRA__1ACAB244DB6FFCF31]', N'PK__CARTEIRA__1ACAB244DB6FFCF3', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CARTEIRAS].[IX_GESTOR_CARTEIRA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_CARTEIRA]
    ON [dbo].[CARTEIRAS]([CARTEIRA] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CELULAR_BLACKLIST]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CELULAR_BLACKLIST] (
    [BLACKLISTID] INT          IDENTITY (1, 1) NOT NULL,
    [CELULAR]     NUMERIC (11) NOT NULL,
    [DATA]        DATETIME     NOT NULL,
    [CLIENTEID]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([BLACKLISTID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CELULAR_BLACKLIST])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULAR_BLACKLIST] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CELULAR_BLACKLIST] ([BLACKLISTID], [CELULAR], [DATA], [CLIENTEID])
        SELECT   [BLACKLISTID],
                 [CELULAR],
                 [DATA],
                 [CLIENTEID]
        FROM     [dbo].[CELULAR_BLACKLIST]
        ORDER BY [BLACKLISTID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULAR_BLACKLIST] OFF;
    END

DROP TABLE [dbo].[CELULAR_BLACKLIST];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CELULAR_BLACKLIST]', N'CELULAR_BLACKLIST';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CELULAR_BLACKLIST].[IX_CELULAR_BLACKLIST]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CELULAR_BLACKLIST]
    ON [dbo].[CELULAR_BLACKLIST]([CELULAR] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CELULARES_INVALIDOS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CELULARES_INVALIDOS] (
    [CODIGO]       INT                  IDENTITY (1, 1) NOT NULL,
    [CELULAR]      NUMERIC (15)         NOT NULL,
    [CLIENTEID]    INT                  NOT NULL,
    [USUARIOID]    INT                  NULL,
    [CARTEIRAID]   INT                  NULL,
    [ARQUIVO]      VARCHAR (250) SPARSE NULL,
    [DATAENVIAR]   DATETIME             NOT NULL,
    [TIPOINVALIDO] TINYINT              NOT NULL,
    [MENSAGEM]     VARCHAR (300)        NOT NULL,
    [IDCLIENTE]    VARCHAR (100)        NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CELULARES_INVALIDOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULARES_INVALIDOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CELULARES_INVALIDOS] ([CODIGO], [CELULAR], [CLIENTEID], [USUARIOID], [CARTEIRAID], [ARQUIVO], [DATAENVIAR], [TIPOINVALIDO], [MENSAGEM], [IDCLIENTE])
        SELECT   [CODIGO],
                 [CELULAR],
                 [CLIENTEID],
                 [USUARIOID],
                 [CARTEIRAID],
                 [ARQUIVO],
                 [DATAENVIAR],
                 [TIPOINVALIDO],
                 [MENSAGEM],
                 [IDCLIENTE]
        FROM     [dbo].[CELULARES_INVALIDOS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULARES_INVALIDOS] OFF;
    END

DROP TABLE [dbo].[CELULARES_INVALIDOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CELULARES_INVALIDOS]', N'CELULARES_INVALIDOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CELULARES_INVALIDOS].[CELULARES_INVALIDOS_Includes]...';


GO
CREATE NONCLUSTERED INDEX [CELULARES_INVALIDOS_Includes]
    ON [dbo].[CELULARES_INVALIDOS]([CLIENTEID] ASC, [CARTEIRAID] ASC, [ARQUIVO] ASC, [DATAENVIAR] ASC, [TIPOINVALIDO] ASC)
    INCLUDE([CELULAR], [MENSAGEM], [IDCLIENTE]);


GO
PRINT N'Starting rebuilding table [dbo].[CELULARES_INVALIDOS_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CELULARES_INVALIDOS_CONSOLIDADO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [TIPOINVALIDO] TINYINT       NOT NULL,
    [CLIENTEID]    INT           NOT NULL,
    [USUARIOID]    INT           NULL,
    [QUANTIDADE]   INT           NOT NULL,
    [CARTEIRAID]   INT           NOT NULL,
    [ARQUIVO]      VARCHAR (255) NULL,
    [DATADIA]      DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CELULARES_INVALIDOS_CONSOLIDADO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULARES_INVALIDOS_CONSOLIDADO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CELULARES_INVALIDOS_CONSOLIDADO] ([CODIGO], [TIPOINVALIDO], [CLIENTEID], [USUARIOID], [QUANTIDADE], [CARTEIRAID], [ARQUIVO], [DATADIA])
        SELECT   [CODIGO],
                 [TIPOINVALIDO],
                 [CLIENTEID],
                 [USUARIOID],
                 [QUANTIDADE],
                 [CARTEIRAID],
                 [ARQUIVO],
                 [DATADIA]
        FROM     [dbo].[CELULARES_INVALIDOS_CONSOLIDADO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CELULARES_INVALIDOS_CONSOLIDADO] OFF;
    END

DROP TABLE [dbo].[CELULARES_INVALIDOS_CONSOLIDADO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CELULARES_INVALIDOS_CONSOLIDADO]', N'CELULARES_INVALIDOS_CONSOLIDADO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[CLIENTES]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CLIENTES] (
    [CLIENTEID]   INT           IDENTITY (1, 1) NOT NULL,
    [NOME]        VARCHAR (150) NOT NULL,
    [CNPJ]        VARCHAR (14)  NOT NULL,
    [ENDERECO]    VARCHAR (150) NULL,
    [NUMERO]      VARCHAR (10)  NULL,
    [COMPLEMENTO] VARCHAR (100) NULL,
    [BAIRRO]      VARCHAR (100) NULL,
    [CEP]         VARCHAR (8)   NULL,
    [CIDADE]      VARCHAR (150) NULL,
    [UF]          CHAR (2)      NULL,
    [DATA]        DATETIME      DEFAULT (getdate()) NOT NULL,
    [POSPAGO]     BIT           DEFAULT 0 NOT NULL,
    [SALDO]       INT           DEFAULT 0 NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK__CLIENTES__566BBD8BD2FD13481] PRIMARY KEY CLUSTERED ([CLIENTEID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CLIENTES])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CLIENTES] ([CLIENTEID], [NOME], [CNPJ], [ENDERECO], [NUMERO], [COMPLEMENTO], [BAIRRO], [CEP], [CIDADE], [UF], [DATA], [POSPAGO], [SALDO])
        SELECT   [CLIENTEID],
                 [NOME],
                 [CNPJ],
                 [ENDERECO],
                 [NUMERO],
                 [COMPLEMENTO],
                 [BAIRRO],
                 [CEP],
                 [CIDADE],
                 [UF],
                 [DATA],
                 [POSPAGO],
                 [SALDO]
        FROM     [dbo].[CLIENTES]
        ORDER BY [CLIENTEID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES] OFF;
    END

DROP TABLE [dbo].[CLIENTES];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CLIENTES]', N'CLIENTES';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK__CLIENTES__566BBD8BD2FD13481]', N'PK__CLIENTES__566BBD8BD2FD1348', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CLIENTES].[IX_CLIENTES]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CLIENTES]
    ON [dbo].[CLIENTES]([CNPJ] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CLIENTES_CONFIGURACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CLIENTES_CONFIGURACAO] (
    [CODIGO]                 INT IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]              INT NOT NULL,
    [DISTRIBUICAOAUTOMATICA] BIT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CLIENTES_CONFIGURACAO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES_CONFIGURACAO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CLIENTES_CONFIGURACAO] ([CODIGO], [CLIENTEID], [DISTRIBUICAOAUTOMATICA])
        SELECT   [CODIGO],
                 [CLIENTEID],
                 [DISTRIBUICAOAUTOMATICA]
        FROM     [dbo].[CLIENTES_CONFIGURACAO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES_CONFIGURACAO] OFF;
    END

DROP TABLE [dbo].[CLIENTES_CONFIGURACAO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CLIENTES_CONFIGURACAO]', N'CLIENTES_CONFIGURACAO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[CLIENTES_CONTATO]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CLIENTES_CONTATO] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [TELEFONE]  NUMERIC (14)  NULL,
    [EMAIL]     VARCHAR (255) NULL,
    [DESCRICAO] VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CLIENTES_CONTATO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES_CONTATO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CLIENTES_CONTATO] ([CODIGO], [CLIENTEID], [TELEFONE], [EMAIL], [DESCRICAO])
        SELECT   [CODIGO],
                 [CLIENTEID],
                 [TELEFONE],
                 [EMAIL],
                 [DESCRICAO]
        FROM     [dbo].[CLIENTES_CONTATO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CLIENTES_CONTATO] OFF;
    END

DROP TABLE [dbo].[CLIENTES_CONTATO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CLIENTES_CONTATO]', N'CLIENTES_CONTATO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[FILECARDS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FILECARDS] (
    [CODIGO]  INT           IDENTITY (1, 1) NOT NULL,
    [GUID]    VARCHAR (40)  NOT NULL,
    [DATA]    DATETIME      NOT NULL,
    [ARQUIVO] VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FILECARDS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FILECARDS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FILECARDS] ([CODIGO], [GUID], [DATA], [ARQUIVO])
        SELECT   [CODIGO],
                 [GUID],
                 [DATA],
                 [ARQUIVO]
        FROM     [dbo].[FILECARDS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FILECARDS] OFF;
    END

DROP TABLE [dbo].[FILECARDS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FILECARDS]', N'FILECARDS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[FORNECEDOR]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FORNECEDOR] (
    [FORNECEDORID] INT           IDENTITY (1, 1) NOT NULL,
    [NOME]         VARCHAR (150) NULL,
    [CPFCNPJ]      VARCHAR (15)  NOT NULL,
    [ENDERECO]     VARCHAR (150) NOT NULL,
    [NUMERO]       VARCHAR (10)  NOT NULL,
    [COMPLEMENTO]  VARCHAR (100) NULL,
    [BAIRRO]       VARCHAR (100) NOT NULL,
    [CIDADE]       VARCHAR (150) NOT NULL,
    [UF]           CHAR (2)      NOT NULL,
    [DATA]         DATETIME      DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_FORNECEDOR1] PRIMARY KEY CLUSTERED ([FORNECEDORID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FORNECEDOR])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FORNECEDOR] ([FORNECEDORID], [NOME], [CPFCNPJ], [ENDERECO], [NUMERO], [COMPLEMENTO], [BAIRRO], [CIDADE], [UF], [DATA])
        SELECT   [FORNECEDORID],
                 [NOME],
                 [CPFCNPJ],
                 [ENDERECO],
                 [NUMERO],
                 [COMPLEMENTO],
                 [BAIRRO],
                 [CIDADE],
                 [UF],
                 [DATA]
        FROM     [dbo].[FORNECEDOR]
        ORDER BY [FORNECEDORID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR] OFF;
    END

DROP TABLE [dbo].[FORNECEDOR];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FORNECEDOR]', N'FORNECEDOR';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_FORNECEDOR1]', N'PK_FORNECEDOR', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FORNECEDOR].[IX_FORNECEDOR_CPFCNPJ]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_FORNECEDOR_CPFCNPJ]
    ON [dbo].[FORNECEDOR]([CPFCNPJ] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FORNECEDOR_CAPACIDADE]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FORNECEDOR_CAPACIDADE] (
    [CODIGO]       INT IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT NOT NULL,
    [OPERADORAID]  INT NOT NULL,
    [CAPACIDADE]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FORNECEDOR_CAPACIDADE])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CAPACIDADE] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FORNECEDOR_CAPACIDADE] ([CODIGO], [FORNECEDORID], [OPERADORAID], [CAPACIDADE])
        SELECT   [CODIGO],
                 [FORNECEDORID],
                 [OPERADORAID],
                 [CAPACIDADE]
        FROM     [dbo].[FORNECEDOR_CAPACIDADE]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CAPACIDADE] OFF;
    END

DROP TABLE [dbo].[FORNECEDOR_CAPACIDADE];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FORNECEDOR_CAPACIDADE]', N'FORNECEDOR_CAPACIDADE';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[FORNECEDOR_CLIENTE]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FORNECEDOR_CLIENTE] (
    [CODIGO]       INT             IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT             NOT NULL,
    [CLIENTEID]    INT             NOT NULL,
    [ATIVO]        BIT             NOT NULL,
    [VISIVEL]      BIT             NOT NULL,
    [DATAVINCULO]  DATETIME        DEFAULT GETDATE() NOT NULL,
    [DISTRIBUICAO] DECIMAL (18, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FORNECEDOR_CLIENTE])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CLIENTE] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FORNECEDOR_CLIENTE] ([CODIGO], [FORNECEDORID], [CLIENTEID], [ATIVO], [VISIVEL], [DATAVINCULO], [DISTRIBUICAO])
        SELECT   [CODIGO],
                 [FORNECEDORID],
                 [CLIENTEID],
                 [ATIVO],
                 [VISIVEL],
                 [DATAVINCULO],
                 [DISTRIBUICAO]
        FROM     [dbo].[FORNECEDOR_CLIENTE]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CLIENTE] OFF;
    END

DROP TABLE [dbo].[FORNECEDOR_CLIENTE];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FORNECEDOR_CLIENTE]', N'FORNECEDOR_CLIENTE';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[FORNECEDOR_CLIENTE].[IX_CLIENTES_FORNECEDOR]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_CLIENTES_FORNECEDOR]
    ON [dbo].[FORNECEDOR_CLIENTE]([FORNECEDORID] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FORNECEDOR_CONTATO]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FORNECEDOR_CONTATO] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT           NOT NULL,
    [TELEFONE]     NUMERIC (14)  NULL,
    [EMAIL]        VARCHAR (255) NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FORNECEDOR_CONTATO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CONTATO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FORNECEDOR_CONTATO] ([CODIGO], [FORNECEDORID], [TELEFONE], [EMAIL])
        SELECT   [CODIGO],
                 [FORNECEDORID],
                 [TELEFONE],
                 [EMAIL]
        FROM     [dbo].[FORNECEDOR_CONTATO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_CONTATO] OFF;
    END

DROP TABLE [dbo].[FORNECEDOR_CONTATO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FORNECEDOR_CONTATO]', N'FORNECEDOR_CONTATO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[FORNECEDOR_FAIXAS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FORNECEDOR_FAIXAS] (
    [CODIGO]       INT            IDENTITY (1, 1) NOT NULL,
    [VALOR]        DECIMAL (5, 5) NOT NULL,
    [FAIXAIN]      INT            NOT NULL,
    [FAIXAOUT]     INT            NOT NULL,
    [FORNECEDORID] INT            NOT NULL,
    [TIPOSMS]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FORNECEDOR_FAIXAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_FAIXAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FORNECEDOR_FAIXAS] ([CODIGO], [VALOR], [FAIXAIN], [FAIXAOUT], [FORNECEDORID], [TIPOSMS])
        SELECT   [CODIGO],
                 [VALOR],
                 [FAIXAIN],
                 [FAIXAOUT],
                 [FORNECEDORID],
                 [TIPOSMS]
        FROM     [dbo].[FORNECEDOR_FAIXAS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FORNECEDOR_FAIXAS] OFF;
    END

DROP TABLE [dbo].[FORNECEDOR_FAIXAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FORNECEDOR_FAIXAS]', N'FORNECEDOR_FAIXAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GESTOR]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GESTOR] (
    [GESTORID]  INT           IDENTITY (1, 1) NOT NULL,
    [NOME]      VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    [DATA]      DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([GESTORID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GESTOR])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GESTOR] ([GESTORID], [NOME], [CLIENTEID], [DATA])
        SELECT   [GESTORID],
                 [NOME],
                 [CLIENTEID],
                 [DATA]
        FROM     [dbo].[GESTOR]
        ORDER BY [GESTORID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR] OFF;
    END

DROP TABLE [dbo].[GESTOR];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GESTOR]', N'GESTOR';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[GESTOR].[IX_GESTOR_NOME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_NOME]
    ON [dbo].[GESTOR]([NOME] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[GESTOR_CARTEIRAS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GESTOR_CARTEIRAS] (
    [CODIGO]     INT IDENTITY (1, 1) NOT NULL,
    [CARTEIRAID] INT NOT NULL,
    [GESTORID]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GESTOR_CARTEIRAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_CARTEIRAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GESTOR_CARTEIRAS] ([CODIGO], [CARTEIRAID], [GESTORID])
        SELECT   [CODIGO],
                 [CARTEIRAID],
                 [GESTORID]
        FROM     [dbo].[GESTOR_CARTEIRAS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_CARTEIRAS] OFF;
    END

DROP TABLE [dbo].[GESTOR_CARTEIRAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GESTOR_CARTEIRAS]', N'GESTOR_CARTEIRAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[GESTOR_CARTEIRAS].[IX_GESTOR_CARTEIRAS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_CARTEIRAS]
    ON [dbo].[GESTOR_CARTEIRAS]([CARTEIRAID] ASC, [GESTORID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[GESTOR_EMAIL]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GESTOR_EMAIL] (
    [CODIGO]   INT           IDENTITY (1, 1) NOT NULL,
    [GESTORID] INT           NOT NULL,
    [EMAIL]    VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GESTOR_EMAIL])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_EMAIL] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GESTOR_EMAIL] ([CODIGO], [GESTORID], [EMAIL])
        SELECT   [CODIGO],
                 [GESTORID],
                 [EMAIL]
        FROM     [dbo].[GESTOR_EMAIL]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_EMAIL] OFF;
    END

DROP TABLE [dbo].[GESTOR_EMAIL];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GESTOR_EMAIL]', N'GESTOR_EMAIL';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[GESTOR_EMAIL].[IX_GESTOR_EMAIL]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_EMAIL]
    ON [dbo].[GESTOR_EMAIL]([EMAIL] ASC, [GESTORID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[GESTOR_TELEFONES]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GESTOR_TELEFONES] (
    [CODIGO]   INT          IDENTITY (1, 1) NOT NULL,
    [GESTORID] INT          NOT NULL,
    [TELEFONE] NUMERIC (12) NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GESTOR_TELEFONES])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_TELEFONES] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GESTOR_TELEFONES] ([CODIGO], [GESTORID], [TELEFONE])
        SELECT   [CODIGO],
                 [GESTORID],
                 [TELEFONE]
        FROM     [dbo].[GESTOR_TELEFONES]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GESTOR_TELEFONES] OFF;
    END

DROP TABLE [dbo].[GESTOR_TELEFONES];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GESTOR_TELEFONES]', N'GESTOR_TELEFONES';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[GESTOR_TELEFONES].[IX_GESTOR_TELEFONES]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GESTOR_TELEFONES]
    ON [dbo].[GESTOR_TELEFONES]([TELEFONE] ASC, [GESTORID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[GRUPOPAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GRUPOPAGINAS] (
    [GRUPOID] INT           IDENTITY (1, 1) NOT NULL,
    [GRUPO]   VARCHAR (150) NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GRUPOPAGINAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOPAGINAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GRUPOPAGINAS] ([GRUPOID], [GRUPO])
        SELECT   [GRUPOID],
                 [GRUPO]
        FROM     [dbo].[GRUPOPAGINAS]
        ORDER BY [GRUPOID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOPAGINAS] OFF;
    END

DROP TABLE [dbo].[GRUPOPAGINAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GRUPOPAGINAS]', N'GRUPOPAGINAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[GRUPOUSUARIO_PAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GRUPOUSUARIO_PAGINAS] (
    [GRUPOUSUARIOPAGINAID] INT     IDENTITY (1, 1) NOT NULL,
    [PAGINAID]             INT     NOT NULL,
    [GRUPOUSUARIOID]       INT     NOT NULL,
    [PERMISSAO]            TINYINT NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOUSUARIOPAGINAID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GRUPOUSUARIO_PAGINAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOUSUARIO_PAGINAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GRUPOUSUARIO_PAGINAS] ([GRUPOUSUARIOPAGINAID], [PAGINAID], [GRUPOUSUARIOID], [PERMISSAO])
        SELECT   [GRUPOUSUARIOPAGINAID],
                 [PAGINAID],
                 [GRUPOUSUARIOID],
                 [PERMISSAO]
        FROM     [dbo].[GRUPOUSUARIO_PAGINAS]
        ORDER BY [GRUPOUSUARIOPAGINAID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOUSUARIO_PAGINAS] OFF;
    END

DROP TABLE [dbo].[GRUPOUSUARIO_PAGINAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GRUPOUSUARIO_PAGINAS]', N'GRUPOUSUARIO_PAGINAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[GRUPOUSUARIOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GRUPOUSUARIOS] (
    [GRUPOUSUARIOID]     INT           IDENTITY (1, 1) NOT NULL,
    [COTA]               INT           NOT NULL,
    [SALDO]              INT           NOT NULL,
    [CLIENTEID]          INT           NOT NULL,
    [SALDOCOMPARTILHADO] BIT           NOT NULL,
    [NOME]               VARCHAR (150) NOT NULL,
    PRIMARY KEY CLUSTERED ([GRUPOUSUARIOID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GRUPOUSUARIOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOUSUARIOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GRUPOUSUARIOS] ([GRUPOUSUARIOID], [COTA], [SALDO], [CLIENTEID], [SALDOCOMPARTILHADO], [NOME])
        SELECT   [GRUPOUSUARIOID],
                 [COTA],
                 [SALDO],
                 [CLIENTEID],
                 [SALDOCOMPARTILHADO],
                 [NOME]
        FROM     [dbo].[GRUPOUSUARIOS]
        ORDER BY [GRUPOUSUARIOID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GRUPOUSUARIOS] OFF;
    END

DROP TABLE [dbo].[GRUPOUSUARIOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GRUPOUSUARIOS]', N'GRUPOUSUARIOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GRUPOUSUARIOS].[IX_GRUPOUSUARIOS_NOME]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GRUPOUSUARIOS_NOME]
    ON [dbo].[GRUPOUSUARIOS]([NOME] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[IDENTITYSERVER_CLIENTS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS] (
    [CODIGO]    INT          IDENTITY (1, 1) NOT NULL,
    [SECRET]    VARCHAR (50) NOT NULL,
    [CLIENTEID] VARCHAR (50) NOT NULL,
    [TOKENTYPE] TINYINT      NOT NULL,
    [GRANTYPES] VARCHAR (50) NOT NULL,
    [TOKENLIFE] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IDENTITYSERVER_CLIENTS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS] ([CODIGO], [SECRET], [CLIENTEID], [TOKENTYPE], [GRANTYPES], [TOKENLIFE])
        SELECT   [CODIGO],
                 [SECRET],
                 [CLIENTEID],
                 [TOKENTYPE],
                 [GRANTYPES],
                 [TOKENLIFE]
        FROM     [dbo].[IDENTITYSERVER_CLIENTS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS] OFF;
    END

DROP TABLE [dbo].[IDENTITYSERVER_CLIENTS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS]', N'IDENTITYSERVER_CLIENTS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS].[IX_IDENTITYSERVER_CLIENTS_CLIENTEID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_CLIENTEID]
    ON [dbo].[IDENTITYSERVER_CLIENTS]([CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[IDENTITYSERVER_CLIENTS_CLAIM]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_CLAIM] (
    [ID]     INT           IDENTITY (1, 1) NOT NULL,
    [CODIGO] INT           NOT NULL,
    [VALUE]  VARCHAR (50)  NOT NULL,
    [TYPE]   VARCHAR (250) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IDENTITYSERVER_CLIENTS_CLAIM])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_CLAIM] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_CLAIM] ([ID], [CODIGO], [VALUE], [TYPE])
        SELECT   [ID],
                 [CODIGO],
                 [VALUE],
                 [TYPE]
        FROM     [dbo].[IDENTITYSERVER_CLIENTS_CLAIM]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_CLAIM] OFF;
    END

DROP TABLE [dbo].[IDENTITYSERVER_CLIENTS_CLAIM];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_CLAIM]', N'IDENTITYSERVER_CLIENTS_CLAIM';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_SCOPES] (
    [ID]          INT                 IDENTITY (1, 1) NOT NULL,
    [APISECRET]   VARCHAR (50) SPARSE NULL,
    [USERCLAIMS]  VARCHAR (1000)      NULL,
    [API]         VARCHAR (50)        NOT NULL,
    [DISPLAYNAME] VARCHAR (150)       NOT NULL,
    [CODIGO]      INT                 NOT NULL,
    [TOKEN]       VARCHAR (70)        NULL,
    [DATA]        DATETIME            NOT NULL,
    [ISRESETED]   BIT                 DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IDENTITYSERVER_CLIENTS_SCOPES])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_SCOPES] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_SCOPES] ([ID], [APISECRET], [USERCLAIMS], [API], [DISPLAYNAME], [CODIGO], [TOKEN], [DATA], [ISRESETED])
        SELECT   [ID],
                 [APISECRET],
                 [USERCLAIMS],
                 [API],
                 [DISPLAYNAME],
                 [CODIGO],
                 [TOKEN],
                 [DATA],
                 [ISRESETED]
        FROM     [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_SCOPES] OFF;
    END

DROP TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IDENTITYSERVER_CLIENTS_SCOPES]', N'IDENTITYSERVER_CLIENTS_SCOPES';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_SCOPES].[IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN]
    ON [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]([TOKEN] ASC);


GO
PRINT N'Creating [dbo].[IDENTITYSERVER_CLIENTS_SCOPES].[IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN_Includes]...';


GO
CREATE NONCLUSTERED INDEX [IX_IDENTITYSERVER_CLIENTS_SCOPES_TOKEN_Includes]
    ON [dbo].[IDENTITYSERVER_CLIENTS_SCOPES]([TOKEN] ASC)
    INCLUDE([APISECRET], [API]);


GO
PRINT N'Starting rebuilding table [dbo].[LOG_ATIVIDADE]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LOG_ATIVIDADE] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]     INT           NOT NULL,
    [USUARIOID]     INT           NULL,
    [DATA]          DATETIME      NOT NULL,
    [DESCRICAO]     VARCHAR (250) NOT NULL,
    [TIPOATIVIDADE] TINYINT       NOT NULL,
    [DATADIA]       DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LOG_ATIVIDADE])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LOG_ATIVIDADE] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LOG_ATIVIDADE] ([CODIGO], [CLIENTEID], [USUARIOID], [DATA], [DESCRICAO], [TIPOATIVIDADE], [DATADIA])
        SELECT   [CODIGO],
                 [CLIENTEID],
                 [USUARIOID],
                 [DATA],
                 [DESCRICAO],
                 [TIPOATIVIDADE],
                 [DATADIA]
        FROM     [dbo].[LOG_ATIVIDADE]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LOG_ATIVIDADE] OFF;
    END

DROP TABLE [dbo].[LOG_ATIVIDADE];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LOG_ATIVIDADE]', N'LOG_ATIVIDADE';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[MOTIVO_BLACKLIST]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MOTIVO_BLACKLIST] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [MOTIVO]    VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MOTIVO_BLACKLIST])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MOTIVO_BLACKLIST] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MOTIVO_BLACKLIST] ([CODIGO], [MOTIVO], [CLIENTEID])
        SELECT   [CODIGO],
                 [MOTIVO],
                 [CLIENTEID]
        FROM     [dbo].[MOTIVO_BLACKLIST]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MOTIVO_BLACKLIST] OFF;
    END

DROP TABLE [dbo].[MOTIVO_BLACKLIST];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MOTIVO_BLACKLIST]', N'MOTIVO_BLACKLIST';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[MOTIVO_BLACKLIST].[IX_MOTIVO_BLACKLIST]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_MOTIVO_BLACKLIST]
    ON [dbo].[MOTIVO_BLACKLIST]([CLIENTEID] ASC, [MOTIVO] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[OPERADORA]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_OPERADORA] (
    [OPERADORAID] INT          IDENTITY (1, 1) NOT NULL,
    [OPERADORA]   VARCHAR (50) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_OPERADORA1] PRIMARY KEY CLUSTERED ([OPERADORAID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[OPERADORA])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_OPERADORA] ON;
        INSERT INTO [dbo].[tmp_ms_xx_OPERADORA] ([OPERADORAID], [OPERADORA])
        SELECT   [OPERADORAID],
                 [OPERADORA]
        FROM     [dbo].[OPERADORA]
        ORDER BY [OPERADORAID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_OPERADORA] OFF;
    END

DROP TABLE [dbo].[OPERADORA];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_OPERADORA]', N'OPERADORA';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_OPERADORA1]', N'PK_OPERADORA', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PADRAO_POSTAGENS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PADRAO_POSTAGENS] (
    [CODIGO]     INT           IDENTITY (1, 1) NOT NULL,
    [ARQUIVO]    VARCHAR (255) NOT NULL,
    [CARTEIRAID] INT           NOT NULL,
    [CLIENTEID]  INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PADRAO_POSTAGENS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PADRAO_POSTAGENS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PADRAO_POSTAGENS] ([CODIGO], [ARQUIVO], [CARTEIRAID], [CLIENTEID])
        SELECT   [CODIGO],
                 [ARQUIVO],
                 [CARTEIRAID],
                 [CLIENTEID]
        FROM     [dbo].[PADRAO_POSTAGENS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PADRAO_POSTAGENS] OFF;
    END

DROP TABLE [dbo].[PADRAO_POSTAGENS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PADRAO_POSTAGENS]', N'PADRAO_POSTAGENS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[PADRAO_POSTAGENS].[IX_PADRAO_POSTAGENS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_PADRAO_POSTAGENS]
    ON [dbo].[PADRAO_POSTAGENS]([ARQUIVO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PAGINAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PAGINAS] (
    [PAGINAID] INT           IDENTITY (1, 1) NOT NULL,
    [PAGINA]   VARCHAR (150) NOT NULL,
    [GRUPOID]  INT           NOT NULL,
    [URL]      VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([PAGINAID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PAGINAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PAGINAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PAGINAS] ([PAGINAID], [PAGINA], [GRUPOID], [URL])
        SELECT   [PAGINAID],
                 [PAGINA],
                 [GRUPOID],
                 [URL]
        FROM     [dbo].[PAGINAS]
        ORDER BY [PAGINAID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PAGINAS] OFF;
    END

DROP TABLE [dbo].[PAGINAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PAGINAS]', N'PAGINAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[PORTABILIDADE]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PORTABILIDADE] (
    [CODIGO]      INT          IDENTITY (1, 1) NOT NULL,
    [NUMERO]      NUMERIC (11) NOT NULL,
    [OPERADORAID] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PORTABILIDADE])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PORTABILIDADE] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PORTABILIDADE] ([CODIGO], [NUMERO], [OPERADORAID])
        SELECT   [CODIGO],
                 [NUMERO],
                 [OPERADORAID]
        FROM     [dbo].[PORTABILIDADE]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PORTABILIDADE] OFF;
    END

DROP TABLE [dbo].[PORTABILIDADE];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PORTABILIDADE]', N'PORTABILIDADE';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PORTABILIDADE].[IX_PORTABILIDADE_NUMERO]...';


GO
CREATE NONCLUSTERED INDEX [IX_PORTABILIDADE_NUMERO]
    ON [dbo].[PORTABILIDADE]([NUMERO] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PREFIXOS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PREFIXOS] (
    [CODIGO]      INT IDENTITY (1, 1) NOT NULL,
    [PREFIXO]     INT NOT NULL,
    [OPERADORAID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PREFIXOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PREFIXOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PREFIXOS] ([CODIGO], [PREFIXO], [OPERADORAID])
        SELECT   [CODIGO],
                 [PREFIXO],
                 [OPERADORAID]
        FROM     [dbo].[PREFIXOS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PREFIXOS] OFF;
    END

DROP TABLE [dbo].[PREFIXOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PREFIXOS]', N'PREFIXOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PREFIXOS].[IX_PREFIXOS]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_PREFIXOS]
    ON [dbo].[PREFIXOS]([PREFIXO] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[RATINHOS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RATINHOS] (
    [CODIGO] INT          IDENTITY (1, 1) NOT NULL,
    [NUMERO] NUMERIC (11) NULL,
    [DATA]   DATETIME     NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RATINHOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RATINHOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RATINHOS] ([CODIGO], [NUMERO], [DATA])
        SELECT   [CODIGO],
                 [NUMERO],
                 [DATA]
        FROM     [dbo].[RATINHOS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RATINHOS] OFF;
    END

DROP TABLE [dbo].[RATINHOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RATINHOS]', N'RATINHOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[REJEITADAS_ANTERIORES]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_REJEITADAS_ANTERIORES] (
    [CODIGO]  INT          IDENTITY (1, 1) NOT NULL,
    [CELULAR] DECIMAL (12) NOT NULL,
    [DATA]    DATE         NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[REJEITADAS_ANTERIORES])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REJEITADAS_ANTERIORES] ON;
        INSERT INTO [dbo].[tmp_ms_xx_REJEITADAS_ANTERIORES] ([CODIGO], [CELULAR], [DATA])
        SELECT   [CODIGO],
                 [CELULAR],
                 [DATA]
        FROM     [dbo].[REJEITADAS_ANTERIORES]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REJEITADAS_ANTERIORES] OFF;
    END

DROP TABLE [dbo].[REJEITADAS_ANTERIORES];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_REJEITADAS_ANTERIORES]', N'REJEITADAS_ANTERIORES';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[REJEITADAS_ANTERIORES].[IX_REJEITADAS_ANTERIORES_CELULAR_Includes]...';


GO
CREATE NONCLUSTERED INDEX [IX_REJEITADAS_ANTERIORES_CELULAR_Includes]
    ON [dbo].[REJEITADAS_ANTERIORES]([CELULAR] ASC, [DATA] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[REQUISICAO_RELATORIO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO] (
    [REQUISICAOID]    INT            IDENTITY (1, 1) NOT NULL,
    [CLIENTEID]       INT            NOT NULL,
    [USUARIOID]       INT            NULL,
    [DATA]            DATETIME       NOT NULL,
    [DATAINICIAL]     DATE           NOT NULL,
    [DATAFINAL]       DATE           NOT NULL,
    [TIPORELATORIO]   TINYINT        NOT NULL,
    [ARQUIVO]         VARCHAR (250)  NOT NULL,
    [STATUSRELATORIO] TINYINT        NOT NULL,
    [TAMANHO]         DECIMAL (8, 2) NULL,
    PRIMARY KEY CLUSTERED ([REQUISICAOID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[REQUISICAO_RELATORIO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO] ([REQUISICAOID], [CLIENTEID], [USUARIOID], [DATA], [DATAINICIAL], [DATAFINAL], [TIPORELATORIO], [ARQUIVO], [STATUSRELATORIO], [TAMANHO])
        SELECT   [REQUISICAOID],
                 [CLIENTEID],
                 [USUARIOID],
                 [DATA],
                 [DATAINICIAL],
                 [DATAFINAL],
                 [TIPORELATORIO],
                 [ARQUIVO],
                 [STATUSRELATORIO],
                 [TAMANHO]
        FROM     [dbo].[REQUISICAO_RELATORIO]
        ORDER BY [REQUISICAOID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO] OFF;
    END

DROP TABLE [dbo].[REQUISICAO_RELATORIO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_REQUISICAO_RELATORIO]', N'REQUISICAO_RELATORIO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[REQUISICAO_RELATORIO_CARTEIRAS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_CARTEIRAS] (
    [CODIGO]       INT IDENTITY (1, 1) NOT NULL,
    [REQUISICAOID] INT NOT NULL,
    [CARTEIRAID]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[REQUISICAO_RELATORIO_CARTEIRAS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_CARTEIRAS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_CARTEIRAS] ([CODIGO], [REQUISICAOID], [CARTEIRAID])
        SELECT   [CODIGO],
                 [REQUISICAOID],
                 [CARTEIRAID]
        FROM     [dbo].[REQUISICAO_RELATORIO_CARTEIRAS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_CARTEIRAS] OFF;
    END

DROP TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_CARTEIRAS]', N'REQUISICAO_RELATORIO_CARTEIRAS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[REQUISICAO_RELATORIO_EMAILS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_EMAILS] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [EMAIL]        VARCHAR (250) NOT NULL,
    [REQUISICAOID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[REQUISICAO_RELATORIO_EMAILS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_EMAILS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_EMAILS] ([CODIGO], [EMAIL], [REQUISICAOID])
        SELECT   [CODIGO],
                 [EMAIL],
                 [REQUISICAOID]
        FROM     [dbo].[REQUISICAO_RELATORIO_EMAILS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_EMAILS] OFF;
    END

DROP TABLE [dbo].[REQUISICAO_RELATORIO_EMAILS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_REQUISICAO_RELATORIO_EMAILS]', N'REQUISICAO_RELATORIO_EMAILS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[RETORNO_CONSOLIDADO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RETORNO_CONSOLIDADO] (
    [CODIGO]       INT  IDENTITY (1, 1) NOT NULL,
    [FORNECEDORID] INT  NOT NULL,
    [POSITIVO]     INT  NOT NULL,
    [NEGATIVO]     INT  NOT NULL,
    [NEUTRO]       INT  NOT NULL,
    [CLIENTEID]    INT  NOT NULL,
    [DATADIA]      DATE NOT NULL,
    [CARTEIRAID]   INT  NOT NULL,
    [ARQUIVOID]    INT  NULL,
    [USUARIOID]    INT  NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RETORNO_CONSOLIDADO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RETORNO_CONSOLIDADO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RETORNO_CONSOLIDADO] ([CODIGO], [FORNECEDORID], [POSITIVO], [NEGATIVO], [NEUTRO], [CLIENTEID], [DATADIA], [CARTEIRAID], [ARQUIVOID], [USUARIOID])
        SELECT   [CODIGO],
                 [FORNECEDORID],
                 [POSITIVO],
                 [NEGATIVO],
                 [NEUTRO],
                 [CLIENTEID],
                 [DATADIA],
                 [CARTEIRAID],
                 [ARQUIVOID],
                 [USUARIOID]
        FROM     [dbo].[RETORNO_CONSOLIDADO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RETORNO_CONSOLIDADO] OFF;
    END

DROP TABLE [dbo].[RETORNO_CONSOLIDADO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RETORNO_CONSOLIDADO]', N'RETORNO_CONSOLIDADO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[RETORNO_INTERJEICAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RETORNO_INTERJEICAO] (
    [CODIGO]        INT           IDENTITY (1, 1) NOT NULL,
    [INTERJEICAO]   VARCHAR (150) NOT NULL,
    [CLIENTEID]     INT           NOT NULL,
    [CLASSIFICACAO] TINYINT       NOT NULL,
    [USUARIOID]     INT           NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RETORNO_INTERJEICAO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RETORNO_INTERJEICAO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RETORNO_INTERJEICAO] ([CODIGO], [INTERJEICAO], [CLIENTEID], [CLASSIFICACAO], [USUARIOID])
        SELECT   [CODIGO],
                 [INTERJEICAO],
                 [CLIENTEID],
                 [CLASSIFICACAO],
                 [USUARIOID]
        FROM     [dbo].[RETORNO_INTERJEICAO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RETORNO_INTERJEICAO] OFF;
    END

DROP TABLE [dbo].[RETORNO_INTERJEICAO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RETORNO_INTERJEICAO]', N'RETORNO_INTERJEICAO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[RETORNO_INTERJEICAO].[IX_RETORNO_INTERJEICAO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_RETORNO_INTERJEICAO]
    ON [dbo].[RETORNO_INTERJEICAO]([INTERJEICAO] ASC, [CLIENTEID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SEGMENTACAO]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SEGMENTACAO] (
    [CODIGO]    INT           IDENTITY (1, 1) NOT NULL,
    [NOME]      VARCHAR (150) NOT NULL,
    [CLIENTEID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SEGMENTACAO])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SEGMENTACAO] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SEGMENTACAO] ([CODIGO], [NOME], [CLIENTEID])
        SELECT   [CODIGO],
                 [NOME],
                 [CLIENTEID]
        FROM     [dbo].[SEGMENTACAO]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SEGMENTACAO] OFF;
    END

DROP TABLE [dbo].[SEGMENTACAO];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SEGMENTACAO]', N'SEGMENTACAO';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[SEGMENTACAO].[IX_SEGMENTACAO]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_SEGMENTACAO]
    ON [dbo].[SEGMENTACAO]([NOME] ASC, [CLIENTEID] ASC);


GO
/*
The column VALUE on table [dbo].[SESSION_ITENS] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/
GO
PRINT N'Starting rebuilding table [dbo].[SESSION_ITENS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SESSION_ITENS] (
    [CODIGO] INT             IDENTITY (1, 1) NOT NULL,
    [GUID]   VARCHAR (60)    NOT NULL,
    [KEY]    VARCHAR (150)   NOT NULL,
    [VALUE]  VARBINARY (MAX) NOT NULL,
    [DATA]   DATETIME        NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SESSION_ITENS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SESSION_ITENS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SESSION_ITENS] ([CODIGO], [GUID], [KEY], [VALUE], [DATA])
        SELECT   [CODIGO],
                 [GUID],
                 [KEY],
                 [VALUE],
                 [DATA]
        FROM     [dbo].[SESSION_ITENS]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SESSION_ITENS] OFF;
    END

DROP TABLE [dbo].[SESSION_ITENS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SESSION_ITENS]', N'SESSION_ITENS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SESSION_ITENS].[IX_SESSION_ITENS_KEY_GUID]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_SESSION_ITENS_KEY_GUID]
    ON [dbo].[SESSION_ITENS]([KEY] ASC, [GUID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TIPOCAMPANHA]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TIPOCAMPANHA] (
    [CODIGO]       INT           IDENTITY (1, 1) NOT NULL,
    [TIPOCAMPANHA] VARCHAR (150) NOT NULL,
    [CLIENTEID]    INT           NOT NULL,
    [VISIVEL]      BIT           NULL,
    [ISEXCLUDED]   BIT           DEFAULT 0 NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK__TIPOCAMP__CC87E1272DC8280D1] PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TIPOCAMPANHA])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TIPOCAMPANHA] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TIPOCAMPANHA] ([CODIGO], [TIPOCAMPANHA], [CLIENTEID], [VISIVEL], [ISEXCLUDED])
        SELECT   [CODIGO],
                 [TIPOCAMPANHA],
                 [CLIENTEID],
                 [VISIVEL],
                 [ISEXCLUDED]
        FROM     [dbo].[TIPOCAMPANHA]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TIPOCAMPANHA] OFF;
    END

DROP TABLE [dbo].[TIPOCAMPANHA];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TIPOCAMPANHA]', N'TIPOCAMPANHA';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK__TIPOCAMP__CC87E1272DC8280D1]', N'PK__TIPOCAMP__CC87E1272DC8280D', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TIPOCAMPANHA].[IX_TIPOCAMPANHA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_TIPOCAMPANHA]
    ON [dbo].[TIPOCAMPANHA]([CLIENTEID] ASC, [TIPOCAMPANHA] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UFDDD]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UFDDD] (
    [CODIGO] INT          IDENTITY (1, 1) NOT NULL,
    [DDD]    TINYINT      NOT NULL,
    [REGIAO] VARCHAR (50) NOT NULL,
    [UF]     CHAR (2)     NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UFDDD])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UFDDD] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UFDDD] ([CODIGO], [DDD], [REGIAO], [UF])
        SELECT   [CODIGO],
                 [DDD],
                 [REGIAO],
                 [UF]
        FROM     [dbo].[UFDDD]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UFDDD] OFF;
    END

DROP TABLE [dbo].[UFDDD];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UFDDD]', N'UFDDD';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[USUARIOS]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_USUARIOS] (
    [USUARIOID]      INT           IDENTITY (1, 1) NOT NULL,
    [NOME]           VARCHAR (100) NOT NULL,
    [LOGINUSER]      VARCHAR (25)  NOT NULL,
    [CLIENTEID]      INT           NOT NULL,
    [SALDO]          INT           NOT NULL,
    [SALDOILIMITADO] BIT           NOT NULL,
    [EMAIL]          VARCHAR (150) NOT NULL,
    [TELEFONE]       NUMERIC (11)  NULL,
    [DATA]           DATETIME      NOT NULL,
    [ATIVO]          BIT           NOT NULL,
    [GRUPOUSUARIOID] INT           NOT NULL,
    [COTA]           INT           NULL,
    [ADMPERFIL]      BIT           NULL,
    [SENHATROCADA]   BIT           DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([USUARIOID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[USUARIOS])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_USUARIOS] ON;
        INSERT INTO [dbo].[tmp_ms_xx_USUARIOS] ([USUARIOID], [NOME], [LOGINUSER], [CLIENTEID], [SALDO], [SALDOILIMITADO], [EMAIL], [TELEFONE], [DATA], [ATIVO], [GRUPOUSUARIOID], [COTA], [ADMPERFIL], [SENHATROCADA])
        SELECT   [USUARIOID],
                 [NOME],
                 [LOGINUSER],
                 [CLIENTEID],
                 [SALDO],
                 [SALDOILIMITADO],
                 [EMAIL],
                 [TELEFONE],
                 [DATA],
                 [ATIVO],
                 [GRUPOUSUARIOID],
                 [COTA],
                 [ADMPERFIL],
                 [SENHATROCADA]
        FROM     [dbo].[USUARIOS]
        ORDER BY [USUARIOID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_USUARIOS] OFF;
    END

DROP TABLE [dbo].[USUARIOS];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_USUARIOS]', N'USUARIOS';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[USUARIOS].[IX_USUARIOS_EMAIL]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_EMAIL]
    ON [dbo].[USUARIOS]([EMAIL] ASC);


GO
PRINT N'Creating [dbo].[USUARIOS].[IX_USUARIOS_LOGINUSER]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_LOGINUSER]
    ON [dbo].[USUARIOS]([LOGINUSER] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[USUARIOS_CARTEIRA]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_USUARIOS_CARTEIRA] (
    [CODIGO]     INT IDENTITY (1, 1) NOT NULL,
    [USUARIOID]  INT NOT NULL,
    [CARTEIRAID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CODIGO] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[USUARIOS_CARTEIRA])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_USUARIOS_CARTEIRA] ON;
        INSERT INTO [dbo].[tmp_ms_xx_USUARIOS_CARTEIRA] ([CODIGO], [USUARIOID], [CARTEIRAID])
        SELECT   [CODIGO],
                 [USUARIOID],
                 [CARTEIRAID]
        FROM     [dbo].[USUARIOS_CARTEIRA]
        ORDER BY [CODIGO] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_USUARIOS_CARTEIRA] OFF;
    END

DROP TABLE [dbo].[USUARIOS_CARTEIRA];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_USUARIOS_CARTEIRA]', N'USUARIOS_CARTEIRA';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[USUARIOS_CARTEIRA].[IX_USUARIOS_CARTEIRA]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_USUARIOS_CARTEIRA]
    ON [dbo].[USUARIOS_CARTEIRA]([CARTEIRAID] ASC, [USUARIOID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HIGIENIZACAO_CELL]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HIGIENIZACAO_CELL] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HIGIENIZACAO_CELL])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_HIGIENIZACAO_CELL] ([Id])
        SELECT   [Id]
        FROM     [dbo].[HIGIENIZACAO_CELL]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[HIGIENIZACAO_CELL];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HIGIENIZACAO_CELL]', N'HIGIENIZACAO_CELL';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]) ON DELETE SET NULL ON UPDATE SET NULL;


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CLIENTES]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_USUARIOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_USUARIOS] FOREIGN KEY ([USUARIOID]) REFERENCES [dbo].[USUARIOS] ([USUARIOID]) ON DELETE SET NULL ON UPDATE SET NULL;


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_ARQUIVOS_FILESZIP_CAMPANHAS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_ARQUIVOS_FILESZIP_CAMPANHAS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_ARQUIVOS]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_ARQUIVOS] FOREIGN KEY ([ARQUIVOID]) REFERENCES [dbo].[CAMPANHAS_ARQUIVOS] ([ARQUIVOID]);


GO
PRINT N'Creating [dbo].[FK_CAMPANHAS_CONSOLIDADOS_USUARIO]...';


GO
ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH NOCHECK
    ADD CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_USUARIO] FOREIGN KEY ([USUARIOID]) REFERENCES [dbo].[USUARIOS] ([USUARIOID]);


GO
PRINT N'Creating [dbo].[FK_CARTEIRA_TELEFONES_CARTEIRA]...';


GO
ALTER TABLE [dbo].[CARTEIRA_TELEFONES] WITH NOCHECK
    ADD CONSTRAINT [FK_CARTEIRA_TELEFONES_CARTEIRA] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_CLIENTES_CONFIGURACAO_CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES_CONFIGURACAO] WITH NOCHECK
    ADD CONSTRAINT [FK_CLIENTES_CONFIGURACAO_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_CLIENTES_CONTATO_CLIENTES]...';


GO
ALTER TABLE [dbo].[CLIENTES_CONTATO] WITH NOCHECK
    ADD CONSTRAINT [FK_CLIENTES_CONTATO_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CAPACIDADE_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CAPACIDADE] WITH NOCHECK
    ADD CONSTRAINT [FK_FORNECEDOR_CAPACIDADE_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CLIENTE_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CLIENTE] WITH NOCHECK
    ADD CONSTRAINT [FK_FORNECEDOR_CLIENTE_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]);


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CLIENTE_CLIENTES]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CLIENTE] WITH NOCHECK
    ADD CONSTRAINT [FK_FORNECEDOR_CLIENTE_CLIENTES] FOREIGN KEY ([CLIENTEID]) REFERENCES [dbo].[CLIENTES] ([CLIENTEID]);


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_CONTATO_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_CONTATO] WITH NOCHECK
    ADD CONSTRAINT [FK_FORNECEDOR_CONTATO_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_FORNECEDOR_FAIXAS_FORNECEDOR]...';


GO
ALTER TABLE [dbo].[FORNECEDOR_FAIXAS] WITH NOCHECK
    ADD CONSTRAINT [FK_FORNECEDOR_FAIXAS_FORNECEDOR] FOREIGN KEY ([FORNECEDORID]) REFERENCES [dbo].[FORNECEDOR] ([FORNECEDORID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_CARTEIRAS_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_CARTEIRAS] WITH NOCHECK
    ADD CONSTRAINT [FK_GESTOR_CARTEIRAS_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_EMAIL_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_EMAIL] WITH NOCHECK
    ADD CONSTRAINT [FK_GESTOR_EMAIL_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GESTOR_TELEFONES_GESTOR]...';


GO
ALTER TABLE [dbo].[GESTOR_TELEFONES] WITH NOCHECK
    ADD CONSTRAINT [FK_GESTOR_TELEFONES_GESTOR] FOREIGN KEY ([GESTORID]) REFERENCES [dbo].[GESTOR] ([GESTORID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_GRUPOUSUARIO_PAGINAS_GRUPOUSUARIO]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIO_PAGINAS] WITH NOCHECK
    ADD CONSTRAINT [FK_GRUPOUSUARIO_PAGINAS_GRUPOUSUARIO] FOREIGN KEY ([GRUPOUSUARIOID]) REFERENCES [dbo].[GRUPOUSUARIOS] ([GRUPOUSUARIOID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_IDENTITYSERVER_CLIENTS_CLAIM_IDENTITYSERVER_CLIENTS]...';


GO
ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_CLAIM] WITH NOCHECK
    ADD CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_CLAIM_IDENTITYSERVER_CLIENTS] FOREIGN KEY ([CODIGO]) REFERENCES [dbo].[IDENTITYSERVER_CLIENTS] ([CODIGO]);


GO
PRINT N'Creating [dbo].[FK_IDENTITYSERVER_CLIENTS_SCOPES_IDENTITYSERVER_CLIENTS]...';


GO
ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES] WITH NOCHECK
    ADD CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_SCOPES_IDENTITYSERVER_CLIENTS] FOREIGN KEY ([CODIGO]) REFERENCES [dbo].[IDENTITYSERVER_CLIENTS] ([CODIGO]);


GO
PRINT N'Creating [dbo].[FK_PADRAO_POSTAGENS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[PADRAO_POSTAGENS] WITH NOCHECK
    ADD CONSTRAINT [FK_PADRAO_POSTAGENS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_CARTEIRAS_REQUSICAO_RELATORIO]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS] WITH NOCHECK
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_REQUSICAO_RELATORIO] FOREIGN KEY ([REQUISICAOID]) REFERENCES [dbo].[REQUISICAO_RELATORIO] ([REQUISICAOID]);


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_CARTEIRAS_CARTEIRAS]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS] WITH NOCHECK
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_CARTEIRAS] FOREIGN KEY ([CARTEIRAID]) REFERENCES [dbo].[CARTEIRAS] ([CARTEIRAID]);


GO
PRINT N'Creating [dbo].[FK_REQUISICAO_RELATORIO_EMAILS_REQUISICAO_RELATORIO]...';


GO
ALTER TABLE [dbo].[REQUISICAO_RELATORIO_EMAILS] WITH NOCHECK
    ADD CONSTRAINT [FK_REQUISICAO_RELATORIO_EMAILS_REQUISICAO_RELATORIO] FOREIGN KEY ([REQUISICAOID]) REFERENCES [dbo].[REQUISICAO_RELATORIO] ([REQUISICAOID]);


GO
PRINT N'Creating [dbo].[FK_USUARIOS_GRUPOUSUARIOS]...';


GO
ALTER TABLE [dbo].[USUARIOS] WITH NOCHECK
    ADD CONSTRAINT [FK_USUARIOS_GRUPOUSUARIOS] FOREIGN KEY ([GRUPOUSUARIOID]) REFERENCES [dbo].[GRUPOUSUARIOS] ([GRUPOUSUARIOID]);


GO
PRINT N'Creating [dbo].[CK_GRUPOUSUARIOS_SALDO]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIOS] WITH NOCHECK
    ADD CONSTRAINT [CK_GRUPOUSUARIOS_SALDO] CHECK (SALDO>=0);


GO
PRINT N'Creating [dbo].[CK_GRUPOUSUARIOS_COTA]...';


GO
ALTER TABLE [dbo].[GRUPOUSUARIOS] WITH NOCHECK
    ADD CONSTRAINT [CK_GRUPOUSUARIOS_COTA] CHECK (COTA>=0);


GO
PRINT N'Creating [dbo].[CommaSeparatedListToSingleColumn]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE FUNCTION [dbo].[CommaSeparatedListToSingleColumn]
( 
    @cslist VARCHAR(MAX)
) 
RETURNS @t TABLE 
( 
    Item VARCHAR(64) 
) 
BEGIN  
    DECLARE @spot SMALLINT, @str VARCHAR(8000), @sql VARCHAR(8000)  
     
    WHILE @cslist <> ''  
    BEGIN  
        SET @spot = CHARINDEX(',', @cslist)  
        IF @spot>0  
            BEGIN  
                SET @str = LEFT(@cslist, @spot-1)  
                SET @cslist = RIGHT(@cslist, LEN(@cslist)-@spot)  
            END  
        ELSE  
            BEGIN  
                SET @str = @cslist  
                SET @cslist = ''  
            END  
        INSERT @t SELECT @str 
    END  
    RETURN 
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[GESTORESSMS]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
	CREATE VIEW [dbo].[GESTORESSMS]
		AS
		SELECT 
		G.NOME, G.CLIENTEID, GT.TELEFONE, GE.EMAIL, GC.CARTEIRAID, G.GESTORID, C.CARTEIRA, C.VISIVEL, C.LIMITE
		FROM GESTOR G 
		LEFT JOIN GESTOR_TELEFONES GT ON G.GESTORID=GT.GESTORID
		LEFT JOIN GESTOR_EMAIL GE ON G.GESTORID=GE.GESTORID
		LEFT JOIN GESTOR_CARTEIRAS GC ON G.GESTORID=GC.GESTORID
		LEFT JOIN CARTEIRAS C ON GC.CARTEIRAID=C.CARTEIRAID AND G.CLIENTEID=C.CLIENTEID 
		GROUP BY G.NOME, G.CLIENTEID, GT.TELEFONE, GE.EMAIL, GC.CARTEIRAID, G.GESTORID, C.CARTEIRA, C.VISIVEL, C.LIMITE
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[PAGINA_GRUPO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE VIEW dbo.PAGINA_GRUPO 
AS 
SELECT P.PAGINA,  G.GRUPOID, P.PAGINAID FROM PAGINAS P JOIN GRUPOPAGINAS G ON P.GRUPOID=G.GRUPOID
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHA_CONSOLIDADO_ENVIOS_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CAMPANHA_CONSOLIDADO_ENVIOS_PAGINACAO --30,1, '2017-4-26',  '2017-4-29', 1,NULL,0,0
@PaginaSize		INT,
@PaginaAtual	INT,
@DataInicial	DATE,
@DataFinal		DATE,
@ClienteID		INT,
@UsuarioID		INT,
@Paginas		INT OUTPUT,
@Registros		INT OUTPUT
AS
BEGIN
DECLARE @TMP TABLE
(
DATAENVIAR		SMALLDATETIME,
ENVIADA			INT,
EXCLUIDA		INT,
ERRO			INT,
SUSPENSA		INT,
ENTREGUE		INT,
EXPIRADA		INT,
DATADIA			DATE,
FORNECEDORID	INT,
CANCELADA		INT,
USUARIOID		INT,
REGISTROS		INT
);
WITH CONSOLIDADO AS
(
	SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID, ROW_NUMBER() OVER ( ORDER BY CODIGO ) REGISTRO FROM CAMPANHAS_CONSOLIDADO WHERE CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal
)
INSERT @TMP
SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID, REGISTRO FROM CONSOLIDADO ORDER BY DATAENVIAR
	IF(@UsuarioID IS NULL)
		SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE
	ELSE
		SELECT DATAENVIAR, ENVIADA, EXCLUIDA, ERRO, SUSPENSA, ENTREGUE, EXPIRADA, DATADIA, FORNECEDORID, CANCELADA, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE AND USUARIOID=@UsuarioID
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CAMPANHA_RETORNO_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CAMPANHA_RETORNO_PAGINACAO --'2017-4-25', '2017-4-28', 1, null
@DataInicial	DATETIME,
@DataFinal		DATETIME,
@ClienteID		INT,
@Search			VARCHAR(150),
@PageSize		INT,
@PageNumber		INT,
@CarteiraID		INT,
@UsuarioID		INT
AS
BEGIN
CREATE TABLE #TMP(
FORNECEDORID	INT,
TEXTO			VARCHAR(160),
IDCLIENTE		VARCHAR(50),
CELULAR			NUMERIC(12,0),
RETORNOCLIENTE	VARCHAR(320),
CLASSIFICACAO	TINYINT,
ARQUIVO			VARCHAR(255),
CODIGO			INT,
DATARETORNO		DATETIME,
CARTEIRA		VARCHAR(150), 
REGISTROS		INT,
USUARIOID		INT
);
			WITH RETORNOS AS
			(
			SELECT CR.FORNECEDORID, C.TEXTO, C.IDCLIENTE, C.CELULAR, CR.RETORNO, CR.CLASSIFICACAO, CA.ARQUIVO, CODIGO, DATARETORNO,CAT.CARTEIRA,  ROW_NUMBER() OVER ( ORDER BY CODIGO ) REGISTRO, C.USUARIOID FROM CAMPANHA_RETORNO CR 
												LEFT JOIN CAMPANHAS C  ON CR.CAMPANHAID=C.CAMPANHAID
												LEFT JOIN CAMPANHAS_ARQUIVOS CA  ON C.ARQUIVOID=CA.ARQUIVOID
												LEFT JOIN CARTEIRAS CAT ON  C.CARTEIRAID=CAT.CARTEIRAID
												WHERE CR.DATARETORNO BETWEEN @DataInicial AND @DataFinal AND C.CLIENTEID=@ClienteID 
												GROUP BY CR.FORNECEDORID, C.TEXTO, C.IDCLIENTE, C.CELULAR, CR.RETORNO, CR.CLASSIFICACAO, CA.ARQUIVO, C.CAMPANHAID, CODIGO, DATARETORNO, CAT.CARTEIRA, C.USUARIOID
			)
			INSERT INTO #TMP
			SELECT FORNECEDORID, TEXTO, IDCLIENTE, CELULAR, RETORNO, CLASSIFICACAO, ARQUIVO, CODIGO, DATARETORNO, CARTEIRA, REGISTRO, USUARIOID FROM RETORNOS

			SELECT CLASSIFICACAO, COUNT(CLASSIFICACAO) QUANTIDADE FROM #TMP GROUP BY CLASSIFICACAO
			SELECT FORNECEDORID, TEXTO, IDCLIENTE, CELULAR, RETORNO, CLASSIFICACAO, ARQUIVO, CODIGO, DATARETORNO, CARTEIRA, REGISTRO, USUARIOID FROM #TMP WHERE CARTEIRAID=@CarteiraID ORDER BY DATARETORNO OFFSET @PageSize * (@PageNumber - 1) ROWS FETCH NEXT @PageSize ROWS ONLY;
			END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CONSOLIDADO_CAMPANHAS_AGENDADA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CONSOLIDADO_CAMPANHAS_AGENDADA
@DataInicial	DATE,
@DataFinal		DATE
AS
CREATE TABLE #TMP(
QUANTIDADE		INT,
ARQUIVOID		INT, 
FORNECEDORID	INT,
CARTEIRAID		INT, 
DATAENVIAR		SMALLDATETIME, 
DATADIA			DATE,
STATUSENVIO		TINYINT,
STATUSREPORT	TINYINT,
CLIENTEID		INT,
USUARIOID		INT,
SPCAPITAL		INT,
SPGRANDE		INT,
DEMAISDDD		INT
);
BEGIN
WITH ENVIADAS AS
(
	SELECT CAMPANHAID, ARQUIVOID, CARTEIRAID, STATUSREPORT, STATUSENVIO, FORNECEDORID, DATAENVIAR, DATADIA, CLIENTEID, USUARIOID, 
	CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)=11 THEN 1 ELSE 0 END SPCAPITAL
	,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>11 AND CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)<=19 THEN 1 ELSE 0 END SPGRANDE
	,CASE WHEN CAST(SUBSTRING(CAST(CELULAR AS VARCHAR(11)), 0, 3) AS INT)>19 THEN 1 ELSE 0 END DEMAISDDD
 FROM CAMPANHAS WHERE DATADIA BETWEEN @DataInicial AND @DataFinal
)
INSERT #TMP
SELECT COUNT(CAMPANHAID), ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA, 
CASE WHEN STATUSENVIO=1 OR STATUSENVIO=0 THEN 3 ELSE STATUSENVIO END, STATUSREPORT, CLIENTEID, USUARIOID
,SUM(SPCAPITAL) SPCAPITAL, SUM(SPGRANDE) SPGRANDE, SUM(DEMAISDDD) DEMAISDDD
FROM ENVIADAS GROUP BY ARQUIVOID, FORNECEDORID, CARTEIRAID, DATAENVIAR, DATADIA, STATUSENVIO, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID

DECLARE @TMP TABLE (
CODIGO			INT IDENTITY(1,1),
CARTEIRAID		INT, 
ARQUIVOID		INT, 
DATAENVIAR		SMALLDATETIME, 
DATADIA			DATE,
FORNECEDORID	INT,
STATUSREPORT	TINYINT,
ERRO			INT,
SUSPENSA		INT,
CANCELADA		INT,
CLIENTEID		INT,
USUARIOID		INT,
ENVIADA			INT,
SPCAPITAL		INT,
SPGRANDE		INT,
DEMAISDDD		INT
);

INSERT @TMP
SELECT CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, ISNULL(STATUSREPORT, 99) STATUSREPORT,ISNULL([3],0) ERRO, ISNULL([4],0) SUSPENSA, ISNULL([5],0) CANCELADA, CLIENTEID, USUARIOID, ISNULL([2],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM 
(SELECT QUANTIDADE, STATUSENVIO, CARTEIRAID, ARQUIVOID, DATAENVIAR, DATADIA, FORNECEDORID, STATUSREPORT, CLIENTEID, USUARIOID, SPCAPITAL, SPGRANDE, DEMAISDDD FROM #TMP) AS PVT PIVOT(SUM(QUANTIDADE) FOR STATUSENVIO IN([2],[3],[4],[5])) AS P;

WITH CONSOLIDADA AS(
SELECT SUSPENSA, CANCELADA, ERRO, ARQUIVOID, CARTEIRAID, DATAENVIAR, FORNECEDORID, DATADIA, ISNULL([68],0) EXCLUIDA, ISNULL([0], 0) ENTREGUE, ISNULL([70],0) EXPIRADA, CLIENTEID, USUARIOID, ISNULL([99],0) ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM 
(SELECT SUSPENSA, ERRO, CANCELADA, ARQUIVOID, DATAENVIAR, FORNECEDORID, STATUSREPORT, CARTEIRAID, DATADIA, CLIENTEID, USUARIOID, ENVIADA, SPCAPITAL, SPGRANDE, DEMAISDDD FROM @TMP) AS PVT PIVOT (SUM(ENVIADA) FOR STATUSREPORT IN([68],[0],[70], [99])) AS P)

INSERT CAMPANHAS_CONSOLIDADO
SELECT CARTEIRAID, ARQUIVOID,  DATAENVIAR, USUARIOID, CLIENTEID,EXCLUIDA,ERRO,SUSPENSA,ENTREGUE,EXPIRADA, DATADIA, FORNECEDORID, CANCELADA,SPCAPITAL, SPGRANDE, DEMAISDDD, ENVIADA FROM CONSOLIDADA C

DROP TABLE #TMP
END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[CONSOLIDADO_STATUS_PAGINACAO]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.CONSOLIDADO_STATUS_PAGINACAO --10, 1,'2017-4-26', '2017-4-30', 1, NULL, 0,0,NULL, 1,1
@PaginaSize		INT,
@PaginaAtual	INT,
@DataInicial	DATE,
@DataFinal		DATE,
@ClienteID		INT,
@UsuarioID		INT,
@Paginas		INT OUTPUT,
@Registros		INT OUTPUT,
@Search			VARCHAR(150),
@StatusEnvio	TINYINT,
@CarteiraID		INT
AS
BEGIN
DECLARE @TMP TABLE (
ARQUIVO			VARCHAR(255),
ARQUIVOID		INT,
CARTEIRA		VARCHAR(150), 
CARTEIRAID		INT,
DATAENVIAR		SMALLDATETIME,
QUANTIDADE		INT,
REGISTROS		INT,
USUARIOID		INT
);
IF @Search IS NULL
BEGIN
	WITH CONSOLIDADA AS
	(
		SELECT C.CARTEIRAID, C.ARQUIVOID, DATAENVIAR, C.USUARIOID, CAMPANHAID, CAT.CARTEIRA FROM CAMPANHAS C
												JOIN CARTEIRAS CAT ON C.CARTEIRAID=CAT.CARTEIRAID
		WHERE C.CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal AND STATUSENVIO=@StatusEnvio
	)
	INSERT @TMP
	SELECT  ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, COUNT(CAMPANHAID) QUANTIDADE, ROW_NUMBER() OVER ( ORDER BY DATAENVIAR ) REGISTRO, C.USUARIOID 
	FROM CONSOLIDADA C
	LEFT JOIN CAMPANHAS_ARQUIVOS CA ON C.ARQUIVOID=CA.ARQUIVOID
	GROUP BY ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, C.USUARIOID ORDER BY DATAENVIAR
END
ELSE
BEGIN	
WITH CONSOLIDADA AS
	(
				SELECT C.CARTEIRAID, C.ARQUIVOID, DATAENVIAR, C.USUARIOID, CAMPANHAID, CAT.CARTEIRA FROM CAMPANHAS C
										JOIN CARTEIRAS CAT ON C.CARTEIRAID=CAT.CARTEIRAID
										WHERE C.CLIENTEID=@ClienteID AND DATADIA BETWEEN @DataInicial AND @DataFinal AND STATUSENVIO=@StatusEnvio
	)
	INSERT @TMP
	SELECT  ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, COUNT(CAMPANHAID) QUANTIDADE, ROW_NUMBER() OVER ( ORDER BY DATAENVIAR ) REGISTRO, C.USUARIOID 
	FROM CONSOLIDADA C 
	LEFT JOIN CAMPANHAS_ARQUIVOS CA ON C.ARQUIVOID=CA.ARQUIVOID
	WHERE CARTEIRA LIKE '%'+@Search+'%' OR ARQUIVO LIKE '%'+@Search+'%'
	GROUP BY ARQUIVO, C.ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, C.USUARIOID ORDER BY DATAENVIAR
END
	DECLARE @TOTALREGISTROS INT=(SELECT COUNT(ARQUIVO) FROM @TMP)
	SET @PAGINAS=@TOTALREGISTROS/@PAGINASIZE
	SET @Registros=@TOTALREGISTROS

	IF(@UsuarioID IS NULL)
		SELECT ARQUIVO, ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, QUANTIDADE, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE
	ELSE
		SELECT ARQUIVO, ARQUIVOID, CARTEIRA, CARTEIRAID, DATAENVIAR, QUANTIDADE, USUARIOID FROM @TMP T
		WHERE T.REGISTROS BETWEEN (@PAGINAATUAL-1)*@PAGINASIZE AND ((@PAGINAATUAL-1)*@PAGINASIZE)+@PAGINASIZE AND USUARIOID=@UsuarioID

END
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[HIGIENIZA]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROC dbo.HIGIENIZA
@Celulares			VARCHAR(MAX),
@DataInicial		DATE,
@DataFinal			DATE,
@ClienteID			INT
AS
DECLARE	@DELIMITER		CHAR(1) = ',';
										DECLARE		@XML			XML = CAST(('<X>'+replace(@Celulares, @DELIMITER ,'</X><X>')+'</X>') AS XML);
	
										CREATE TABLE #TMP_CELLS
										(
											CODIGO	INT	IDENTITY (1,1), 
											CELULAR	NUMERIC(11,0)
										);
										INSERT #TMP_CELLS 
										SELECT N.value('.', 'NUMERIC(11,0)') AS CELULAR FROM @XML.nodes('X') AS T(N);

										SELECT C.CELULAR FROM CAMPANHAS C JOIN #TMP_CELLS TC ON C.CELULAR=TC.CELULAR WHERE CARTEIRAID=1 AND DATAENVIAR BETWEEN '2017-4-1' AND '2017-4-1' AND CLIENTEID=1 AND STATUSENVIO=2
										DROP TABLE #TMP_CELLS
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[CAMPANHAS] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_CARTEIRAS];

ALTER TABLE [dbo].[CAMPANHAS] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_ARQUIVOS];

ALTER TABLE [dbo].[CAMPANHAS] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_CLIENTES];

ALTER TABLE [dbo].[CAMPANHAS] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_USUARIOS];

ALTER TABLE [dbo].[CAMPANHAS] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_FORNECEDOR];

ALTER TABLE [dbo].[CAMPANHAS_ARQUIVOS_FILESZIP] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_ARQUIVOS_FILESZIP_CAMPANHAS_ARQUIVOS];

ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_CARTEIRAS];

ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_ARQUIVOS];

ALTER TABLE [dbo].[CAMPANHAS_CONSOLIDADO] WITH CHECK CHECK CONSTRAINT [FK_CAMPANHAS_CONSOLIDADOS_USUARIO];

ALTER TABLE [dbo].[CARTEIRA_TELEFONES] WITH CHECK CHECK CONSTRAINT [FK_CARTEIRA_TELEFONES_CARTEIRA];

ALTER TABLE [dbo].[CLIENTES_CONFIGURACAO] WITH CHECK CHECK CONSTRAINT [FK_CLIENTES_CONFIGURACAO_CLIENTES];

ALTER TABLE [dbo].[CLIENTES_CONTATO] WITH CHECK CHECK CONSTRAINT [FK_CLIENTES_CONTATO_CLIENTES];

ALTER TABLE [dbo].[FORNECEDOR_CAPACIDADE] WITH CHECK CHECK CONSTRAINT [FK_FORNECEDOR_CAPACIDADE_FORNECEDOR];

ALTER TABLE [dbo].[FORNECEDOR_CLIENTE] WITH CHECK CHECK CONSTRAINT [FK_FORNECEDOR_CLIENTE_FORNECEDOR];

ALTER TABLE [dbo].[FORNECEDOR_CLIENTE] WITH CHECK CHECK CONSTRAINT [FK_FORNECEDOR_CLIENTE_CLIENTES];

ALTER TABLE [dbo].[FORNECEDOR_CONTATO] WITH CHECK CHECK CONSTRAINT [FK_FORNECEDOR_CONTATO_FORNECEDOR];

ALTER TABLE [dbo].[FORNECEDOR_FAIXAS] WITH CHECK CHECK CONSTRAINT [FK_FORNECEDOR_FAIXAS_FORNECEDOR];

ALTER TABLE [dbo].[GESTOR_CARTEIRAS] WITH CHECK CHECK CONSTRAINT [FK_GESTOR_CARTEIRAS_GESTOR];

ALTER TABLE [dbo].[GESTOR_EMAIL] WITH CHECK CHECK CONSTRAINT [FK_GESTOR_EMAIL_GESTOR];

ALTER TABLE [dbo].[GESTOR_TELEFONES] WITH CHECK CHECK CONSTRAINT [FK_GESTOR_TELEFONES_GESTOR];

ALTER TABLE [dbo].[GRUPOUSUARIO_PAGINAS] WITH CHECK CHECK CONSTRAINT [FK_GRUPOUSUARIO_PAGINAS_GRUPOUSUARIO];

ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_CLAIM] WITH CHECK CHECK CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_CLAIM_IDENTITYSERVER_CLIENTS];

ALTER TABLE [dbo].[IDENTITYSERVER_CLIENTS_SCOPES] WITH CHECK CHECK CONSTRAINT [FK_IDENTITYSERVER_CLIENTS_SCOPES_IDENTITYSERVER_CLIENTS];

ALTER TABLE [dbo].[PADRAO_POSTAGENS] WITH CHECK CHECK CONSTRAINT [FK_PADRAO_POSTAGENS_CARTEIRAS];

ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS] WITH CHECK CHECK CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_REQUSICAO_RELATORIO];

ALTER TABLE [dbo].[REQUISICAO_RELATORIO_CARTEIRAS] WITH CHECK CHECK CONSTRAINT [FK_REQUISICAO_RELATORIO_CARTEIRAS_CARTEIRAS];

ALTER TABLE [dbo].[REQUISICAO_RELATORIO_EMAILS] WITH CHECK CHECK CONSTRAINT [FK_REQUISICAO_RELATORIO_EMAILS_REQUISICAO_RELATORIO];

ALTER TABLE [dbo].[USUARIOS] WITH CHECK CHECK CONSTRAINT [FK_USUARIOS_GRUPOUSUARIOS];

ALTER TABLE [dbo].[GRUPOUSUARIOS] WITH CHECK CHECK CONSTRAINT [CK_GRUPOUSUARIOS_SALDO];

ALTER TABLE [dbo].[GRUPOUSUARIOS] WITH CHECK CHECK CONSTRAINT [CK_GRUPOUSUARIOS_COTA];


GO
PRINT N'Update complete.';


GO
